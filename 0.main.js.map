{"version":3,"sources":["webpack:///0.main.js","webpack:///./assets/javascript/analytics.js","webpack:///./~/autotrack/lib/utilities.js","webpack:///./~/autotrack/lib/provide.js","webpack:///./~/autotrack/lib/usage.js","webpack:///./~/autotrack/lib/constants.js","webpack:///./~/autotrack/lib/method-chain.js","webpack:///./~/autotrack/lib/store.js","webpack:///./~/dom-utils/lib/matches.js","webpack:///./~/autotrack/lib/session.js","webpack:///./~/dom-utils/lib/closest.js","webpack:///./~/dom-utils/lib/parents.js","webpack:///./~/autotrack/lib/event-emitter.js","webpack:///./~/autotrack/lib/plugins/clean-url-tracker.js","webpack:///./~/autotrack/lib/plugins/event-tracker.js","webpack:///./~/autotrack/lib/plugins/max-scroll-tracker.js","webpack:///./~/autotrack/lib/plugins/media-query-tracker.js","webpack:///./~/autotrack/lib/plugins/outbound-link-tracker.js","webpack:///./~/autotrack/lib/plugins/page-visibility-tracker.js","webpack:///./~/autotrack/lib/plugins/social-widget-tracker.js","webpack:///./~/dom-utils/lib/delegate.js","webpack:///./~/dom-utils/lib/get-attributes.js","webpack:///./~/dom-utils/lib/parse-url.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","init","createTrackers","trackErrors","trackCustomDimensions","requireAutotrackPlugins","trackPageload","sendInitialPageview","trackError","err","gaAll","stack","toString","nonInteraction","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","ALL_TRACKERS","Symbol","iterator","next","done","tracker","window","ga","trackingId","name","siteSpeedSampleRate","return","errorQueue","onerror","q","msg","file","line","col","error","eventCategory","eventAction","eventLabel","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_window","apply","keys","dimensions","forEach","NULL_VALUE","gaTest","_tracker$set","set","TRACKING_VERSION","CLIENT_ID","get","WINDOW_ID","uuid","originalBuildHitTask","model","path","location","pathname","PAGE_PATH","HIT_TYPE","HIT_TIME","String","Date","HIT_ID","VISIBILITY_STATE","document","visibilityState","stripQuery","queryDimensionIndex","getDefinitionIndex","URL_QUERY_PARAMS","indexFilename","trailingSlash","sessionTimeout","timeZone","maxScrollMetricIndex","metrics","MAX_SCROLL_PERCENTAGE","definitions","dimensionIndex","items","media","visibleMetricIndex","PAGE_VISIBLE","fieldsObj","HIT_SOURCE","createGaProxy","trackers","command","_len","arguments","args","_key","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","getByName","_window2","concat","_iterator3","definition","exec","shuffleArray","array","j","Math","floor","random","temp","sliceIterator","_arr","_n","_d","_e","_s","_i","push","TypeError","TEST_TRACKERS","filter","_ref","test","BREAKPOINT","RESOLUTION","ORIENTATION","METRIC_VALUE","b","a","replace","createFieldsObj","defaultFields","userFields","hitFilter","target","assign","_ret","v","buildHitTask","_typeof","getAttributeFields","element","prefix","attributes","__WEBPACK_IMPORTED_MODULE_0_dom_utils__","attributeFields","attribute","indexOf","field","camelCase","slice","debounce","fn","wait","timeout","clearTimeout","setTimeout","withTimeout","callback","called","str","match","p1","toUpperCase","capitalize","charAt","isObject","toArray","now","d","constructor","prototype","_len2","sources","_key2","source","hasOwnProperty","call","provide","pluginName","pluginConstructor","gaAlias","GoogleAnalyticsObject","gaDevIds","__WEBPACK_IMPORTED_MODULE_0__constants__","gaplugins","__WEBPACK_IMPORTED_MODULE_1__utilities__","trackUsage","plugin","trackVersion","trackPlugin","convertHexToBin","hex","parseInt","convertBinToHex","bin","padZeros","len","toAdd","flipBitOn","index","substr","pluginIndex","usageHex","usageBin","PLUGIN_COUNT","plugins","CLEAN_URL_TRACKER","EVENT_TRACKER","IMPRESSION_TRACKER","MEDIA_QUERY_TRACKER","OUTBOUND_FORM_TRACKER","OUTBOUND_LINK_TRACKER","PAGE_VISIBILITY_TRACKER","SOCIAL_WIDGET_TRACKER","URL_CHANGE_TRACKER","MAX_SCROLL_TRACKER","VERSION","DEV_ID","VERSION_PARAM","USAGE_PARAM","NULL_DIMENSION","__WEBPACK_IMPORTED_MODULE_1__lib_delegate__","__WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__","__WEBPACK_IMPORTED_MODULE_6__lib_parse_url__","_classCallCheck","instance","Constructor","getOrCreateMethodChain","context","methodName","methodChain","instances","h","MethodChain","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_this","this","isTask","originalMethodReference","boundMethodChain","wrappedMethod","lastBoundMethod","methodOverride","add","remove","overrideMethod","rebindMethodChain","splice","destroy","method","previousMethod","bind","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","initStorageListener","addEventListener","storageListener","isListening","removeStorageListener","removeEventListener","event","store","oldData","parse","oldValue","defaults","newData","newValue","emit","data","JSON","__WEBPACK_IMPORTED_MODULE_0__event_emitter__","AUTOTRACK_PREFIX","Store","_EventEmitter","getPrototypeOf","namespace","join","storedItem","localStorage","getItem","mergedData","setItem","stringify","removeItem","matches","nodeType","matchesSelector","item","selector","nativeMatches","node","nodes","parentNode","querySelectorAll","proto","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","__WEBPACK_IMPORTED_MODULE_0__method_chain__","__WEBPACK_IMPORTED_MODULE_1__store__","__WEBPACK_IMPORTED_MODULE_2__utilities__","SECONDS","MINUTES","Session","DEFAULT_TIMEOUT","sendHitTaskOverride","dateTimeFormatter","Intl","DateTimeFormat","defaultProps","hitTime","isExpired","getOrCreate","sessionData","currentDate","oldHitTime","oldHitDate","datesAreDifferentInTimezone","d1","d2","format","originalMethod","isSessionExpired","sessionControl","sessionWillStart","sessionWillEnd","closest","shouldCheckSelf","parent","parentElements","__WEBPACK_IMPORTED_MODULE_1__parents__","__WEBPACK_IMPORTED_MODULE_0__matches__","parents","list","EventEmitter","registry_","getRegistry_","eventRegistry","handlerIndex","eventCount","__WEBPACK_IMPORTED_MODULE_1__constants__","__WEBPACK_IMPORTED_MODULE_2__method_chain__","__WEBPACK_IMPORTED_MODULE_3__provide__","__WEBPACK_IMPORTED_MODULE_4__usage__","__WEBPACK_IMPORTED_MODULE_5__utilities__","CleanUrlTracker","opts","defaultOpts","queryDimension","trackerGetOverride","buildHitTaskOverride","page","cleanedFieldsObj","cleanUrlFields","_this2","url","parts","split","isFilename","search","urlFieldsFilter","userCleanedFieldsObj","__WEBPACK_IMPORTED_MODULE_1__provide__","__WEBPACK_IMPORTED_MODULE_2__usage__","__WEBPACK_IMPORTED_MODULE_3__utilities__","EventTracker","events","attributePrefix","handleEvents","delegates","composed","useCapture","type","getAttribute","transport","hitType","send","getPageHeight","html","documentElement","body","max","offsetHeight","scrollHeight","__WEBPACK_IMPORTED_MODULE_1__method_chain__","__WEBPACK_IMPORTED_MODULE_2__provide__","__WEBPACK_IMPORTED_MODULE_3__session__","__WEBPACK_IMPORTED_MODULE_4__store__","__WEBPACK_IMPORTED_MODULE_5__usage__","__WEBPACK_IMPORTED_MODULE_6__utilities__","MaxScrollTracker","increaseThreshold","pagePath","getPagePath","handleScroll","trackerSetOverride","session","listenForMaxScrollChanges","maxScrollPercentage","getMaxScrollPercentageForCurrentPage","pageHeight","scrollPos","pageYOffset","windowHeight","innerHeight","scrollPercentage","min","round","clear","stopListeningForMaxScrollChanges","increaseAmount","setMaxScrollPercentageForCurrentPage","sendMaxScrollEvent","fields","lastPagePath","eventValue","getMediaList","mediaMap","matchMedia","MediaQueryTracker","changeTemplate","changeTimeout","changeListeners","processMediaQueries","mediaName","getMatchName","addChangeListeners","mql","handleChanges","addListener","listener","removeListener","linkClickWillUnloadCurrentPage","link","metaKey","ctrlKey","shiftKey","altKey","which","OutboundLinkTracker","linkSelector","shouldTrackOutboundLink","handleLinkInteractions","href","navigator","sendBeacon","defaultPrevented","preventDefault","hitCallback","parseUrlFn","hostname","protocol","_this3","HIDDEN","VISIBLE","PAGE_ID","PageVisibilityTracker","lastPageState","handleChange","handleWindowUnload","handleExternalStoreSet","on","lastStoredChange","validateChangeData","change","time","state","pageId","sendPageVisibilityEvent","queueTime","delta","getTimeSinceLastStoredChange","isSessionActive","timeSinceLastStoredChange","__WEBPACK_IMPORTED_MODULE_0__provide__","__WEBPACK_IMPORTED_MODULE_1__usage__","SocialWidgetTracker","addWidgetListeners","addTwitterEventHandlers","handleTweetEvents","handleFollowEvents","handleLikeEvents","handleUnlikeEvents","readyState","FB","addFacebookEventHandlers","twttr","ready","unbind","Event","subscribe","unsubscribe","region","socialNetwork","socialAction","socialTarget","screenName","screen_name","removeFacebookEventHandlers","removeTwitterEventHandlers","delegate","ancestor","eventType","delegateTarget","composedPath","__WEBPACK_IMPORTED_MODULE_1__matches__","__WEBPACK_IMPORTED_MODULE_0__closest__","getAttributes","attrs","map","attr","parseUrl","cache","port","HTTP_PORT","HTTPS_PORT","host","DEFAULT_PORT","origin","hash","RegExp","createElement"],"mappings":"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","file":"0.main.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_autotrack_lib_plugins_clean_url_tracker__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_autotrack_lib_plugins_event_tracker__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_autotrack_lib_plugins_max_scroll_tracker__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_autotrack_lib_plugins_media_query_tracker__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_autotrack_lib_plugins_outbound_link_tracker__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_autotrack_lib_plugins_page_visibility_tracker__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_autotrack_lib_plugins_social_widget_tracker__ = __webpack_require__(21);\n/* harmony export (immutable) */ __webpack_exports__[\"init\"] = init;\n/* harmony export (immutable) */ __webpack_exports__[\"trackPageload\"] = trackPageload;\n/* harmony export (immutable) */ __webpack_exports__[\"trackError\"] = trackError;\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\n\n\n\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nvar TRACKING_VERSION = '2';\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nvar ALL_TRACKERS = shuffleArray([{ name: 't0', trackingId: 'UA-40829935-1' }, { name: 'testing', trackingId: 'UA-40829935-4' }]);\n\nvar TEST_TRACKERS = ALL_TRACKERS.filter(function (_ref) {\n  var name = _ref.name;\n  return (/test/.test(name)\n  );\n});\nvar NULL_VALUE = '(not set)';\n\nvar metrics = {\n  PAGE_VISIBLE: 'metric1',\n  MAX_SCROLL_PERCENTAGE: 'metric2'\n};\n\nvar dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  HIT_TYPE: 'dimension8',\n  HIT_TIME: 'dimension9',\n  HIT_ID: 'dimension10',\n  WINDOW_ID: 'dimension11',\n  VISIBILITY_STATE: 'dimension12',\n  TRACKING_VERSION: 'dimension13',\n  PAGE_PATH: 'dimension14'\n};\n\n// The command queue proxies.\nvar gaAll = createGaProxy(ALL_TRACKERS);\nvar gaTest = createGaProxy(TEST_TRACKERS);\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nfunction init() {\n  createTrackers();\n  trackErrors();\n\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n}\n\n/**\n * Tracks the initial pageload and performance timing data associated with it.\n */\nfunction trackPageload() {\n  sendInitialPageview();\n}\n\n/**\n * Tracks a JavaScript error.\n * @param {Error} err The error object to track.\n */\nfunction trackError(err) {\n  gaAll('send', 'event', 'Script', 'error', err.stack || err.toString(), {\n    nonInteraction: true\n  });\n}\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nfunction createTrackers() {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = ALL_TRACKERS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var tracker = _step.value;\n\n      window.ga('create', tracker.trackingId, 'auto', tracker.name, {\n        siteSpeedSampleRate: 10\n      });\n    }\n\n    // Ensures all hits are sent via `navigator.sendBeacon()`.\n    // Note: this cannot via the `create` command.\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  gaAll('set', 'transport', 'beacon');\n\n  // Log hits in non-production environments.\n  if (false) {\n    gaAll('set', 'sendHitTask', function (model) {\n      var _window$console;\n\n      var paramsToIgnore = ['v', 'did', 't', 'tid', 'ec', 'ea', 'el', 'ev', 'a', 'z', 'ul', 'de', 'sd', 'sr', 'vp', 'je', 'fl', 'jid'];\n\n      var hitType = model.get('&t');\n      var hitPayload = model.get('hitPayload');\n      var hit = hitPayload.split('&').map(decodeURIComponent).filter(function (item) {\n        var _item$split = item.split('='),\n            _item$split2 = _slicedToArray(_item$split, 1),\n            param = _item$split2[0];\n\n        return !(param.charAt(0) === '_' || paramsToIgnore.indexOf(param) > -1);\n      });\n\n      var parts = [model.get('&tid'), hitType];\n      if (hitType == 'event') {\n        parts = [].concat(_toConsumableArray(parts), [model.get('&ec'), model.get('&ea'), model.get('&el')]);\n        if (model.get('&ev')) parts.push(model.get('&ev'));\n      }\n\n      (_window$console = window['console']).log.apply(_window$console, _toConsumableArray(parts).concat([hit]));\n    });\n  }\n}\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  var errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = function (msg, file, line, col, error) {\n    gaAll('send', 'event', {\n      eventCategory: 'Script',\n      eventAction: 'uncaught error',\n      eventLabel: error ? error.stack : msg + '\\n' + file + ':' + line + ':' + col,\n      nonInteraction: true\n    });\n  };\n\n  // Replay any stored errors in the queue.\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = errorQueue[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _window;\n\n      var error = _step2.value;\n\n      (_window = window).onerror.apply(_window, _toConsumableArray(error));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nfunction trackCustomDimensions() {\n  // Sets a default dimension value for all custom dimensions on all trackers.\n  // This obviously must be done before setting any other custom dimensions.\n  Object.keys(dimensions).forEach(function (key) {\n    gaAll('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  gaTest(function (tracker) {\n    var _tracker$set;\n\n    tracker.set((_tracker$set = {}, _defineProperty(_tracker$set, dimensions.TRACKING_VERSION, TRACKING_VERSION), _defineProperty(_tracker$set, dimensions.CLIENT_ID, tracker.get('clientId')), _defineProperty(_tracker$set, dimensions.WINDOW_ID, uuid()), _tracker$set));\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  gaTest(function (tracker) {\n    var originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', function (model) {\n      var path = model.get('page') || location.pathname;\n      model.set(dimensions.PAGE_PATH, path), model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.HIT_TIME, String(+new Date()), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n      originalBuildHitTask(model);\n    });\n  });\n}\n\n/**\n * Requires select autotrack plugins for each tracker.\n */\nfunction requireAutotrackPlugins() {\n  gaAll('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add'\n  });\n  gaAll('require', 'eventTracker');\n  gaTest('require', 'maxScrollTracker', {\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    maxScrollMetricIndex: getDefinitionIndex(metrics.MAX_SCROLL_PERCENTAGE)\n  });\n  gaAll('require', 'mediaQueryTracker', {\n    definitions: [{\n      name: 'Breakpoint',\n      dimensionIndex: 1,\n      items: [{ name: 'xs', media: 'all' }, { name: 'sm', media: '(min-width: 384px)' }, { name: 'md', media: '(min-width: 576px)' }, { name: 'lg', media: '(min-width: 768px)' }]\n    }, {\n      name: 'Resolution',\n      dimensionIndex: 2,\n      items: [{ name: '1x', media: 'all' }, { name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' + '(min-resolution: 144dpi)' }, { name: '2x', media: '(-webkit-min-device-pixel-ratio: 2), ' + '(min-resolution: 192dpi)' }]\n    }, {\n      name: 'Orientation',\n      dimensionIndex: 3,\n      items: [{ name: 'landscape', media: '(orientation: landscape)' }, { name: 'portrait', media: '(orientation: portrait)' }]\n    }]\n  });\n  gaAll('require', 'outboundLinkTracker');\n  gaTest('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: _defineProperty({}, dimensions.HIT_SOURCE, 'pageVisibilityTracker')\n  });\n  gaAll('require', 'socialWidgetTracker');\n}\n\n/**\n * Sends the initial pageview.\n */\nfunction sendInitialPageview() {\n  gaAll('send', 'pageview', _defineProperty({}, dimensions.HIT_SOURCE, 'pageload'));\n}\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return function (command) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      var _loop = function _loop() {\n        var name = _step3.value.name;\n\n        if (typeof command == 'function') {\n          window.ga(function () {\n            command(window.ga.getByName(name));\n          });\n        } else {\n          var _window2;\n\n          (_window2 = window).ga.apply(_window2, [name + '.' + command].concat(args));\n        }\n      };\n\n      for (var _iterator3 = trackers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        _loop();\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n/**\n * Randomizes array element order in-place using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n/*eslint-enable */\n\n/***/ }),\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(7);\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createFieldsObj;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = getAttributeFields;\n/* unused harmony export domReady */\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = debounce;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = withTimeout;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return assign; });\n/* unused harmony export camelCase */\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = capitalize;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isObject;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = toArray;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = now;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return uuid; });\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @return {!FieldsObj} The final fields object.\n */\nfunction createFieldsObj(defaultFields, userFields) {\n  var tracker = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  var hitFilter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  var target = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n\n  if (typeof hitFilter == 'function') {\n    var _ret = function () {\n      var originalBuildHitTask = tracker.get('buildHitTask');\n      return {\n        v: {\n          buildHitTask: function buildHitTask( /** @type {!Model} */model) {\n            model.set(defaultFields, null, true);\n            model.set(userFields, null, true);\n            hitFilter(model, target);\n            originalBuildHitTask(model);\n          }\n        }\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nfunction getAttributeFields(element, prefix) {\n  var attributes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"a\" /* getAttributes */])(element);\n  var attributeFields = {};\n\n  Object.keys(attributes).forEach(function (attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      var value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      var field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nfunction domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nfunction debounce(fn, wait) {\n  var timeout = void 0;\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      return fn.apply(undefined, args);\n    }, wait);\n  };\n}\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nfunction withTimeout(callback) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n\n  var called = false;\n  var fn = function fn() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...Object} sources Additional objects who properties should be\n *     assigned to target.\n * @return {!Object} The modified target object.\n */\nvar assign = Object.assign || function (target) {\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  for (var source, i = 0; source = sources[i]; i++) {\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nfunction camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function (match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) == 'object' && value !== null;\n}\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nfunction toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @return {number} The current date timestamp\n */\nfunction now() {\n  return +new Date();\n}\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nvar uuid = function b(a) {\n  return a ? (a ^ Math.random() * 16 >> a / 4).toString(16) : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);\n};\n/*eslint-enable */\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(3);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = provide;\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nfunction provide(pluginName, pluginConstructor) {\n  var gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]) < 0) {\n    window.gaDevIds.push(__WEBPACK_IMPORTED_MODULE_0__constants__[\"a\" /* DEV_ID */]);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"c\" /* capitalize */])(pluginName)] = pluginConstructor;\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(6);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return plugins; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = trackUsage;\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10\n};\n\nvar PLUGIN_COUNT = Object.keys(plugins).length;\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nfunction trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    var toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  var usageHex = tracker.get('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */]);\n  var usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"b\" /* USAGE_PARAM */], convertBinToHex(usageBin));\n}\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + __WEBPACK_IMPORTED_MODULE_0__constants__[\"c\" /* VERSION_PARAM */], __WEBPACK_IMPORTED_MODULE_0__constants__[\"d\" /* VERSION */]);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DEV_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return VERSION_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return USAGE_PARAM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return NULL_DIMENSION; });\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar VERSION = '2.0.0-rc.2';\nvar DEV_ID = 'i5iSjo';\n\nvar VERSION_PARAM = '_av';\nvar USAGE_PARAM = '_au';\n\nvar NULL_DIMENSION = '(not set)';\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_closest__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_delegate__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_dispatch__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_matches__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_parents__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__ = __webpack_require__(25);\n/* unused harmony reexport closest */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib_delegate__[\"a\"]; });\n/* unused harmony reexport dispatch */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__lib_get_attributes__[\"a\"]; });\n/* unused harmony reexport matches */\n/* unused harmony reexport parents */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_6__lib_parse_url__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\nvar instances = [];\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\n\nvar MethodChain = function () {\n  _createClass(MethodChain, null, [{\n    key: \"add\",\n\n    /**\n     * Adds the passed override method to the list of method chain overrides.\n     * @param {!Object} context The object containing the method to chain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to add.\n     */\n    value: function add(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).add(methodOverride);\n    }\n\n    /**\n     * Removes a method chain added via `add()`. If the override is the\n     * only override added, the original method is restored.\n     * @param {!Object} context The object containing the method to unchain.\n     * @param {string} methodName The name of the method on the object.\n     * @param {!Function} methodOverride The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(context, methodName, methodOverride) {\n      getOrCreateMethodChain(context, methodName).remove(methodOverride);\n    }\n\n    /**\n     * Wraps a foreign object method and overrides it. Also stores a reference\n     * to the original method so it can be restored later.\n     * @param {!Object} context The object containing the method.\n     * @param {string} methodName The name of the method on the object.\n     */\n\n  }]);\n\n  function MethodChain(context, methodName) {\n    var _this = this;\n\n    _classCallCheck(this, MethodChain);\n\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ? context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = function () {\n      var lastBoundMethod = _this.boundMethodChain[_this.boundMethodChain.length - 1];\n\n      return lastBoundMethod.apply(undefined, arguments);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n\n\n  _createClass(MethodChain, [{\n    key: \"add\",\n    value: function add(overrideMethod) {\n      this.methodChain.push(overrideMethod);\n      this.rebindMethodChain();\n    }\n\n    /**\n     * Removes a method from the method chain and restores the prior order.\n     * @param {!Function} overrideMethod The override method to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(overrideMethod) {\n      var index = this.methodChain.indexOf(overrideMethod);\n      if (index > -1) {\n        this.methodChain.splice(index, 1);\n        if (this.methodChain.length > 0) {\n          this.rebindMethodChain();\n        } else {\n          this.destroy();\n        }\n      }\n    }\n\n    /**\n     * Loops through the method chain array and recreates the bound method\n     * chain array. This is necessary any time a method is added or removed\n     * to ensure proper original method context and order.\n     */\n\n  }, {\n    key: \"rebindMethodChain\",\n    value: function rebindMethodChain() {\n      this.boundMethodChain = [];\n      for (var method, i = 0; method = this.methodChain[i]; i++) {\n        var previousMethod = this.boundMethodChain[i - 1] || this.originalMethodReference.bind(this.context);\n        this.boundMethodChain.push(method(previousMethod));\n      }\n    }\n\n    /**\n     * Calls super and destroys the instance if no registered handlers remain.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var index = instances.indexOf(this);\n      if (index > -1) {\n        instances.splice(index, 1);\n        if (this.isTask) {\n          this.context.set(this.methodName, this.originalMethodReference);\n        } else {\n          this.context[this.methodName] = this.originalMethodReference;\n        }\n      }\n    }\n  }]);\n\n  return MethodChain;\n}();\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = MethodChain;\nfunction getOrCreateMethodChain(context, methodName) {\n  var methodChain = instances.filter(function (h) {\n    return h.context == context && h.methodName == methodName;\n  })[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__event_emitter__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar AUTOTRACK_PREFIX = 'autotrack';\nvar instances = {};\nvar isListening = false;\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\n\nvar Store = function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  _createClass(Store, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguements or creates a new\n     * instance if one doesn't exist.\n     * @param {string} trackingId The tracking ID for the GA property.\n     * @param {string} namespace A namespace unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     * @return {Store} The Store instance.\n     */\n    value: function getOrCreate(trackingId, namespace, defaults) {\n      var key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n      // Don't create multiple instances for the same tracking Id and namespace.\n      if (!instances[key]) {\n        instances[key] = new Store(key, defaults);\n        instances[key].key = key;\n        if (!isListening) initStorageListener();\n      }\n      return instances[key];\n    }\n\n    /**\n     * @param {string} key A key unique to this store.\n     * @param {Object=} defaults An optional object of key/value defaults.\n     */\n\n  }]);\n\n  function Store(key, defaults) {\n    _classCallCheck(this, Store);\n\n    var _this = _possibleConstructorReturn(this, (Store.__proto__ || Object.getPrototypeOf(Store)).call(this));\n\n    _this.key = key;\n    _this.defaults = defaults || {};\n    return _this;\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n\n\n  _createClass(Store, [{\n    key: 'get',\n    value: function get() {\n      var storedItem = String(window.localStorage && window.localStorage.getItem(this.key));\n\n      if (typeof storedItem != 'string') return {};\n      // TODO(philipwalton): Implement schema migrations if/when a new\n      // schema version is introduced.\n      return parse(storedItem, this.defaults);\n    }\n\n    /**\n     * Saves the passed data object to localStorage,\n     * merging it with the existing data.\n     * @param {Object} newData The data to save.\n     */\n\n  }, {\n    key: 'set',\n    value: function set(newData) {\n      var oldData = this.get();\n      var mergedData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])(oldData, newData);\n      window.localStorage && window.localStorage.setItem(this.key, JSON.stringify(mergedData));\n    }\n\n    /**\n     * Clears the data in localStorage for the current store.\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      window.localStorage && window.localStorage.removeItem(this.key);\n    }\n\n    /**\n     * Removes the store instance for the global instances map. If this is the\n     * last store instance, the storage listener is also removed.\n     * Note: this does not erase the stored data. Use `clear()` for that.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete instances[this.key];\n      if (!Object.keys(instances).length) {\n        removeStorageListener();\n      }\n    }\n  }]);\n\n  return Store;\n}(__WEBPACK_IMPORTED_MODULE_0__event_emitter__[\"a\" /* default */]);\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Store;\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  var store = instances[event.key];\n  if (store) {\n    var oldData = parse(event.oldValue, store.defaults);\n    var newData = parse(event.newValue, store.defaults);\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n/**\n * Parses a source string as JSON and merges the result with the passed\n * defaults object. If an error occurs while\n * @param {string} source A JSON string of data.\n * @param {!Object} defaults An object of key/value defaults.\n * @return {!Object} The parsed data object merged with the passed defaults.\n */\nfunction parse(source, defaults) {\n  var data = void 0;\n  try {\n    data = /** @type {!Object} */JSON.parse(source);\n  } catch (err) {\n    data = {};\n  }\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utilities__[\"a\" /* assign */])({}, defaults, data);\n}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = matches;\nvar proto = window.Element.prototype;\nvar nativeMatches = proto.matches || proto.matchesSelector || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector;\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nfunction matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test || matchesSelector(element, /** @type {string} */test);\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (var i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  var nodes = element.parentNode.querySelectorAll(selector);\n  for (var i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__method_chain__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__store__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nvar SECONDS = 1000;\nvar MINUTES = 60 * SECONDS;\n\nvar instances = {};\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\n\nvar Session = function () {\n  _createClass(Session, null, [{\n    key: 'getOrCreate',\n\n    /**\n     * Gets an existing instance for the passed arguments or creates a new\n     * instance if one doesn't exist.\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     * @return {Session} The Session instance.\n     */\n    value: function getOrCreate(tracker, timeout, timeZone) {\n      // Don't create multiple instances for the same property.\n      var trackingId = tracker.get('trackingId');\n      if (instances[trackingId]) {\n        return instances[trackingId];\n      } else {\n        return instances[trackingId] = new Session(tracker, timeout, timeZone);\n      }\n    }\n\n    /**\n     * @param {!Tracker} tracker An analytics.js tracker object.\n     * @param {number} timeout The session timeout (in minutes). This value\n     *     should match what's set in the \"Session settings\" section of the\n     *     Google Analytics admin.\n     * @param {string=} timeZone The optional IANA time zone of the view. This\n     *     value should match what's set in the \"View settings\" section of the\n     *     Google Analytics admin. (Note: this assumes all views for the property\n     *     use the same time zone. If that's not true, it's better not to use\n     *     this feature).\n     */\n\n  }]);\n\n  function Session(tracker, timeout, timeZone) {\n    _classCallCheck(this, Session);\n\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter = new Intl.DateTimeFormat('en-US', { timeZone: this.timeZone });\n    } catch (err) {}\n    // Do nothing.\n\n\n    // Creates the session store and adds change listeners.\n    /** @type {SessionStoreData} */\n    var defaultProps = {\n      hitTime: 0,\n      isExpired: false\n    };\n    this.store = __WEBPACK_IMPORTED_MODULE_1__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'session', defaultProps);\n  }\n\n  /**\n   * Accepts a tracker object and returns whether or not the session for that\n   * tracker has expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {SessionStoreData=} sessionData An optional sessionData object\n   *     which avoids an additional localStorage read if the data is known to\n   *     be fresh.\n   * @return {boolean} True if the session has expired.\n   */\n\n\n  _createClass(Session, [{\n    key: 'isExpired',\n    value: function isExpired() {\n      var sessionData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.store.get();\n\n      // True if the sessionControl field was set to 'end' on the previous hit.\n      if (sessionData.isExpired) return true;\n\n      var currentDate = new Date();\n      var oldHitTime = sessionData.hitTime;\n      var oldHitDate = oldHitTime && new Date(oldHitTime);\n\n      if (oldHitTime) {\n        if (currentDate - oldHitDate > this.timeout * MINUTES) {\n          // If more time has elapsed than the session expiry time,\n          // the session has expired.\n          return true;\n        } else if (this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n          // A new day has started since the previous hit, which means the\n          // session has expired.\n          return true;\n        }\n      }\n\n      // For all other cases return false.\n      return false;\n    }\n\n    /**\n     * Returns true if (and only if) the timezone date formatting is supported\n     * in the current browser and if the two dates are diffinitiabely not the\n     * same date in the session timezone. Anything short of this returns false.\n     * @param {!Date} d1\n     * @param {!Date} d2\n     * @return {boolean}\n     */\n\n  }, {\n    key: 'datesAreDifferentInTimezone',\n    value: function datesAreDifferentInTimezone(d1, d2) {\n      if (!this.dateTimeFormatter) {\n        return false;\n      } else {\n        return this.dateTimeFormatter.format(d1) != this.dateTimeFormatter.format(d2);\n      }\n    }\n\n    /**\n     * Keeps track of when the previous hit was sent to determine if a session\n     * has expired. Also inspects the `sessionControl` field to handles\n     * expiration accordingly.\n     * @param {function(!Model)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'sendHitTaskOverride',\n    value: function sendHitTaskOverride(originalMethod) {\n      var _this = this;\n\n      return function (model) {\n        originalMethod(model);\n\n        var sessionData = _this.store.get();\n        var isSessionExpired = _this.isExpired(sessionData);\n        var sessionControl = model.get('sessionControl');\n\n        var sessionWillStart = sessionControl == 'start' || isSessionExpired;\n        var sessionWillEnd = sessionControl == 'end';\n\n        // Update the stored session data.\n        sessionData.hitTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"e\" /* now */])();\n        if (sessionWillStart) {\n          sessionData.isExpired = false;\n        }\n        if (sessionWillEnd) {\n          sessionData.isExpired = true;\n        }\n        _this.store.set(sessionData);\n      };\n    }\n\n    /**\n     * Restores the tracker's original `sendHitTask` to the state before\n     * session control was initialized and removes this instance from the global\n     * store.\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      __WEBPACK_IMPORTED_MODULE_0__method_chain__[\"a\" /* default */].remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n      this.store.destroy();\n      delete instances[this.tracker.get('trackingId')];\n    }\n  }]);\n\n  return Session;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Session;\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__matches__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__parents__ = __webpack_require__(13);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = closest;\n\n\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nfunction closest(element, selector) {\n  var shouldCheckSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!(element && element.nodeType == 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__parents__[\"a\" /* default */])(element));\n\n  for (var i = 0, parent; parent = parentElements[i]; i++) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__matches__[\"a\" /* default */])(parent, selector)) return parent;\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parents;\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nfunction parents(element) {\n  var list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */element.parentNode;\n    list.push(element);\n  }\n  return list;\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nvar EventEmitter = function () {\n  /**\n   * Creates the event registry.\n   */\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(event, fn) {\n      this.getRegistry_(event).push(fn);\n    }\n\n    /**\n     * Removes a handler function from the registry for the passed event.\n     * @param {string=} event The event name.\n     * @param {Function=} fn The handler to be removed.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (event && fn) {\n        var eventRegistry = this.getRegistry_(event);\n        var handlerIndex = eventRegistry.indexOf(fn);\n        if (handlerIndex > -1) {\n          eventRegistry.splice(handlerIndex, 1);\n        }\n      } else {\n        this.registry_ = {};\n      }\n    }\n\n    /**\n     * Runs all registered handlers for the passed event with the optional args.\n     * @param {string} event The event name.\n     * @param {...*} args The arguments to be passed to the handler.\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this.getRegistry_(event).forEach(function (fn) {\n        return fn.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Returns the total number of event handlers currently registered.\n     * @return {number}\n     */\n\n  }, {\n    key: \"getEventCount\",\n    value: function getEventCount() {\n      var _this = this;\n\n      var eventCount = 0;\n      Object.keys(this.registry_).forEach(function (event) {\n        eventCount += _this.getRegistry_(event).length;\n      });\n      return eventCount;\n    }\n\n    /**\n     * Returns an array of handlers associated with the passed event name.\n     * If no handlers have been registered, an empty array is returned.\n     * @private\n     * @param {string} event The event name.\n     * @return {!Array} An array of handler functions.\n     */\n\n  }, {\n    key: \"getRegistry_\",\n    value: function getRegistry_(event) {\n      return this.registry_[event] = this.registry_[event] || [];\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = EventEmitter;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__method_chain__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\n\nvar CleanUrlTracker = function () {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  function CleanUrlTracker(tracker, opts) {\n    _classCallCheck(this, CleanUrlTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_4__usage__[\"b\" /* plugins */].CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    var defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery && this.opts.queryDimensionIndex ? 'dimension' + this.opts.queryDimensionIndex : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'get', this.trackerGetOverride);\n    __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n\n\n  _createClass(CleanUrlTracker, [{\n    key: 'trackerGetOverride',\n    value: function trackerGetOverride(originalMethod) {\n      var _this = this;\n\n      return function (field) {\n        if (field == 'page' || field == _this.queryDimension) {\n          var fieldsObj = /** @type {!FieldsObj} */{\n            location: originalMethod('location'),\n            page: originalMethod('page')\n          };\n          var cleanedFieldsObj = _this.cleanUrlFields(fieldsObj);\n          return cleanedFieldsObj[field];\n        } else {\n          return originalMethod(field);\n        }\n      };\n    }\n\n    /**\n     * Cleans URL fields passed in a send command.\n     * @param {function(!Model)} originalMethod A reference to the\n     *     overridden method.\n     * @return {function(!Model)}\n     */\n\n  }, {\n    key: 'buildHitTaskOverride',\n    value: function buildHitTaskOverride(originalMethod) {\n      var _this2 = this;\n\n      return function (model) {\n        var cleanedFieldsObj = _this2.cleanUrlFields({\n          location: model.get('location'),\n          page: model.get('page')\n        });\n        model.set(cleanedFieldsObj, null, true);\n        originalMethod(model);\n      };\n    }\n\n    /**\n     * Accepts of fields object containing URL fields and returns a new\n     * fields object with the URLs \"cleaned\" according to the tracker options.\n     * @param {!FieldsObj} fieldsObj\n     * @return {!FieldsObj}\n     */\n\n  }, {\n    key: 'cleanUrlFields',\n    value: function cleanUrlFields(fieldsObj) {\n      var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(\n      /** @type {string} */fieldsObj.page || fieldsObj.location);\n\n      var pathname = url.pathname;\n\n      // If an index filename was provided, remove it if it appears at the end\n      // of the URL.\n      if (this.opts.indexFilename) {\n        var parts = pathname.split('/');\n        if (this.opts.indexFilename == parts[parts.length - 1]) {\n          parts[parts.length - 1] = '';\n          pathname = parts.join('/');\n        }\n      }\n\n      // Ensure the URL ends with or doesn't end with slash based on the\n      // `trailingSlash` option. Note that filename URLs should never contain\n      // a trailing slash.\n      if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n      } else if (this.opts.trailingSlash == 'add') {\n        var isFilename = /\\.\\w+$/.test(pathname);\n        if (!isFilename && pathname.substr(-1) != '/') {\n          pathname = pathname + '/';\n        }\n      }\n\n      /** @type {!FieldsObj} */\n      var cleanedFieldsObj = {\n        page: pathname + (!this.opts.stripQuery ? url.search : '')\n      };\n      if (fieldsObj.location) {\n        cleanedFieldsObj.location = fieldsObj.location;\n      }\n      if (this.queryDimension) {\n        cleanedFieldsObj[this.queryDimension] = url.search.slice(1) || __WEBPACK_IMPORTED_MODULE_1__constants__[\"e\" /* NULL_DIMENSION */];\n      }\n\n      // Apply the `urlFieldsFilter()` option if passed.\n      if (typeof this.opts.urlFieldsFilter == 'function') {\n        /** @type {!FieldsObj} */\n        var userCleanedFieldsObj = this.opts.urlFieldsFilter(cleanedFieldsObj, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */]);\n\n        // Ensure only the URL fields are returned.\n        return _defineProperty({\n          page: userCleanedFieldsObj.page,\n          location: userCleanedFieldsObj.location\n        }, this.queryDimension, userCleanedFieldsObj[this.queryDimension]);\n      } else {\n        return cleanedFieldsObj;\n      }\n    }\n\n    /**\n     * Restores all overridden tasks and methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'get', this.trackerGetOverride);\n      __WEBPACK_IMPORTED_MODULE_2__method_chain__[\"a\" /* default */].remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n    }\n  }]);\n\n  return CleanUrlTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__provide__[\"a\" /* default */])('cleanUrlTracker', CleanUrlTracker);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\n\nvar EventTracker = function () {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  function EventTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, EventTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    var selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, selector, _this.handleEvents, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all clicks on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n\n\n  _createClass(EventTracker, [{\n    key: 'handleEvents',\n    value: function handleEvents(event, element) {\n      var prefix = this.opts.attributePrefix;\n\n      // Ensures the event type matches the one specified on the element.\n      if (event.type != element.getAttribute(prefix + 'on')) return;\n\n      /** @type {FieldsObj} */\n      var defaultFields = { transport: 'beacon' };\n      var attributeFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"h\" /* getAttributeFields */])(element, prefix);\n      var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, this.opts.fieldsObj, attributeFields);\n      var hitType = attributeFields.hitType || 'event';\n\n      this.tracker.send(hitType, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, this.tracker, this.opts.hitFilter, element));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this2 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this2.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return EventTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('eventTracker', EventTracker);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__session__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\n\nvar MaxScrollTracker = function () {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function MaxScrollTracker(tracker, opts) {\n    _classCallCheck(this, MaxScrollTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_5__usage__[\"b\" /* plugins */].MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    var defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {}\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"j\" /* debounce */])(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = new __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */](tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n\n\n  _createClass(MaxScrollTracker, [{\n    key: 'listenForMaxScrollChanges',\n    value: function listenForMaxScrollChanges() {\n      var maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n      if (maxScrollPercentage < 100) {\n        window.addEventListener('scroll', this.handleScroll);\n      }\n    }\n\n    /**\n     * Removes an added scroll listener.\n     */\n\n  }, {\n    key: 'stopListeningForMaxScrollChanges',\n    value: function stopListeningForMaxScrollChanges() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    /**\n     * Handles the scroll event. If the current scroll percentage is greater\n     * that the stored scroll event by at least the specified increase threshold,\n     * send an event with the increase amount.\n     */\n\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll() {\n      var pageHeight = getPageHeight();\n      var scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n      var windowHeight = window.innerHeight;\n\n      // Ensure scrollPercentage is an integer between 0 and 100.\n      var scrollPercentage = Math.min(100, Math.max(0, Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n      // If the session has expired, clear old scroll data and send no events.\n      if (this.session.isExpired()) {\n        this.store.clear();\n      } else {\n        var maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n        if (scrollPercentage > maxScrollPercentage) {\n          if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n            this.stopListeningForMaxScrollChanges();\n          }\n          var increaseAmount = scrollPercentage - maxScrollPercentage;\n          if (scrollPercentage == 100 || increaseAmount >= this.opts.increaseThreshold) {\n            this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n            this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n          }\n        }\n      }\n    }\n\n    /**\n     * Detects changes to the tracker object and triggers an update if the page\n     * field has changed.\n     * @param {function(...*)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(...*)}\n     */\n\n  }, {\n    key: 'trackerSetOverride',\n    value: function trackerSetOverride(originalMethod) {\n      var _this = this;\n\n      return function () {\n        originalMethod.apply(undefined, arguments);\n\n        /** @type {!FieldsObj} */\n        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* isObject */])(arguments.length <= 0 ? undefined : arguments[0]) ? arguments.length <= 0 ? undefined : arguments[0] : _defineProperty({}, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n        if (fields.page) {\n          var lastPagePath = _this.pagePath;\n          _this.pagePath = _this.getPagePath();\n\n          if (_this.pagePath != lastPagePath) {\n            // Since event listeners for the same function are never added twice,\n            // we don't need to worry about whether we're already listening. We\n            // can just add the event listener again.\n            _this.listenForMaxScrollChanges();\n          }\n        }\n      };\n    }\n\n    /**\n     * Sends an event for the increased max scroll percentage amount.\n     * @param {number} increaseAmount\n     * @param {number} scrollPercentage\n     */\n\n  }, {\n    key: 'sendMaxScrollEvent',\n    value: function sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Max Scroll',\n        eventAction: 'increase',\n        eventValue: increaseAmount,\n        eventLabel: String(scrollPercentage),\n        nonInteraction: true\n      };\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.maxScrollMetricIndex) {\n        defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n      }\n\n      this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Stores the current max scroll percentage for the current page.\n     * @param {number} maxScrollPercentage\n     */\n\n  }, {\n    key: 'setMaxScrollPercentageForCurrentPage',\n    value: function setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n      this.store.set(_defineProperty({}, this.pagePath, maxScrollPercentage));\n    }\n\n    /**\n     * Gets the stored max scroll percentage for the current page.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getMaxScrollPercentageForCurrentPage',\n    value: function getMaxScrollPercentageForCurrentPage() {\n      return this.store.get()[this.pagePath] || 0;\n    }\n\n    /**\n     * Gets the page path from the tracker object.\n     * @return {number}\n     */\n\n  }, {\n    key: 'getPagePath',\n    value: function getPagePath() {\n      var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(this.tracker.get('page') || this.tracker.get('location'));\n      return url.pathname + url.search;\n    }\n\n    /**\n     * Removes all event listeners and restores overridden methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.session.destroy();\n      this.stopListeningForMaxScrollChanges();\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(this.tracker, 'set', this.trackerSetOverride);\n    }\n  }]);\n\n  return MaxScrollTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__provide__[\"a\" /* default */])('maxScrollTracker', MaxScrollTracker);\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  var html = document.documentElement;\n  var body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight, body.offsetHeight, body.scrollHeight);\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nvar mediaMap = {};\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\n\nvar MediaQueryTracker = function () {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function MediaQueryTracker(tracker, opts) {\n    _classCallCheck(this, MediaQueryTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    var defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {}\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    // Exits early if media query data doesn't exist.\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"f\" /* isObject */])(this.opts.definitions)) return;\n\n    this.opts.definitions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"i\" /* toArray */])(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n\n\n  _createClass(MediaQueryTracker, [{\n    key: 'processMediaQueries',\n    value: function processMediaQueries() {\n      var _this = this;\n\n      this.opts.definitions.forEach(function (definition) {\n        // Only processes definitions with a name and index.\n        if (definition.name && definition.dimensionIndex) {\n          var mediaName = _this.getMatchName(definition);\n          _this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n          _this.addChangeListeners(definition);\n        }\n      });\n    }\n\n    /**\n     * Takes a definition object and return the name of the matching media item.\n     * If no match is found, the NULL_DIMENSION value is returned.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension.\n     * @return {string} The name of the matched media or NULL_DIMENSION.\n     */\n\n  }, {\n    key: 'getMatchName',\n    value: function getMatchName(definition) {\n      var match = void 0;\n\n      definition.items.forEach(function (item) {\n        if (getMediaList(item.media).matches) {\n          match = item;\n        }\n      });\n      return match ? match.name : __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */];\n    }\n\n    /**\n     * Adds change listeners to each media query in the definition list.\n     * Debounces the changes to prevent unnecessary hits from being sent.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension\n     */\n\n  }, {\n    key: 'addChangeListeners',\n    value: function addChangeListeners(definition) {\n      var _this2 = this;\n\n      definition.items.forEach(function (item) {\n        var mql = getMediaList(item.media);\n        var fn = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"j\" /* debounce */])(function () {\n          _this2.handleChanges(definition);\n        }, _this2.opts.changeTimeout);\n\n        mql.addListener(fn);\n        _this2.changeListeners.push({ mql: mql, fn: fn });\n      });\n    }\n\n    /**\n     * Handles changes to the matched media. When the new value differs from\n     * the old value, a change event is sent.\n     * @param {Object} definition A set of named media queries associated\n     *     with a single custom dimension\n     */\n\n  }, {\n    key: 'handleChanges',\n    value: function handleChanges(definition) {\n      var newValue = this.getMatchName(definition);\n      var oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n      if (newValue !== oldValue) {\n        this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n        /** @type {FieldsObj} */\n        var defaultFields = {\n          transport: 'beacon',\n          eventCategory: definition.name,\n          eventAction: 'change',\n          eventLabel: this.opts.changeTemplate(oldValue, newValue),\n          nonInteraction: true\n        };\n        this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n      }\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      for (var i = 0, listener; listener = this.changeListeners[i]; i++) {\n        listener.mql.removeListener(listener.fn);\n      }\n    }\n\n    /**\n     * Sets the default formatting of the change event label.\n     * This can be overridden by setting the `changeTemplate` option.\n     * @param {string} oldValue The value of the media query prior to the change.\n     * @param {string} newValue The value of the media query after the change.\n     * @return {string} The formatted event label.\n     */\n\n  }, {\n    key: 'changeTemplate',\n    value: function changeTemplate(oldValue, newValue) {\n      return oldValue + ' => ' + newValue;\n    }\n  }]);\n\n  return MediaQueryTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('mediaQueryTracker', MediaQueryTracker);\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_dom_utils__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\n\nvar OutboundLinkTracker = function () {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function OutboundLinkTracker(tracker, opts) {\n    var _this = this;\n\n    _classCallCheck(this, OutboundLinkTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_2__usage__[\"b\" /* plugins */].OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    var defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-'\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach(function (event) {\n      _this.delegates[event] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"b\" /* delegate */])(document, event, _this.opts.linkSelector, _this.handleLinkInteractions, { composed: true, useCapture: true });\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n\n\n  _createClass(OutboundLinkTracker, [{\n    key: 'handleLinkInteractions',\n    value: function handleLinkInteractions(event, link) {\n      var _this2 = this;\n\n      if (this.opts.shouldTrackOutboundLink(link, __WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])) {\n        (function () {\n          var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n          var url = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_dom_utils__[\"c\" /* parseUrl */])(href);\n\n          /** @type {FieldsObj} */\n          var defaultFields = {\n            transport: 'beacon',\n            eventCategory: 'Outbound Link',\n            eventAction: event.type,\n            eventLabel: url.href\n          };\n\n          if (!navigator.sendBeacon && linkClickWillUnloadCurrentPage(event, link)) {\n            // Adds a new event handler at the last minute to minimize the chances\n            // that another event handler for this click will run after this logic.\n            window.addEventListener('click', function (event) {\n              // Checks to make sure another event handler hasn't already prevented\n              // the default action. If it has the custom redirect isn't needed.\n              if (!event.defaultPrevented) {\n                // Stops the click and waits until the hit is complete (with\n                // timeout) for browsers that don't support beacon.\n                event.preventDefault();\n                defaultFields.hitCallback = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"g\" /* withTimeout */])(function () {\n                  location.href = href;\n                });\n              }\n            });\n          }\n\n          /** @type {FieldsObj} */\n          var userFields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"a\" /* assign */])({}, _this2.opts.fieldsObj, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"h\" /* getAttributeFields */])(link, _this2.opts.attributePrefix));\n\n          _this2.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utilities__[\"b\" /* createFieldsObj */])(defaultFields, userFields, _this2.tracker, _this2.opts.hitFilter, link));\n        })();\n      }\n    }\n\n    /**\n     * Determines whether or not the tracker should send a hit when a link is\n     * clicked. By default links with a hostname property not equal to the current\n     * hostname are tracked.\n     * @param {Element} link The link that was clicked on.\n     * @param {Function} parseUrlFn A cross-browser utility method for url\n     *     parsing (note: renamed to disambiguate when compiling).\n     * @return {boolean} Whether or not the link should be tracked.\n     */\n\n  }, {\n    key: 'shouldTrackOutboundLink',\n    value: function shouldTrackOutboundLink(link, parseUrlFn) {\n      var href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      var url = parseUrlFn(href);\n      return url.hostname != location.hostname && url.protocol.slice(0, 4) == 'http';\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      var _this3 = this;\n\n      Object.keys(this.delegates).forEach(function (key) {\n        _this3.delegates[key].destroy();\n      });\n    }\n  }]);\n\n  return OutboundLinkTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__provide__[\"a\" /* default */])('outboundLinkTracker', OutboundLinkTracker);\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n  // The event type can be customized; we only care about clicks here.\n  event.type != 'click' ||\n  // Links with target=\"_blank\" set will open in a new window/tab.\n  link.target == '_blank' ||\n  // On mac, command clicking will open a link in a new tab. Control\n  // clicking does this on windows.\n  event.metaKey || event.ctrlKey ||\n  // Shift clicking in Chrome/Firefox opens the link in a new window\n  // In Safari it adds the URL to a favorites list.\n  event.shiftKey ||\n  // On Mac, clicking with the option key is used to download a resouce.\n  event.altKey ||\n  // Middle mouse button clicks (which == 2) are used to open a link\n  // in a new tab, and right clicks (which == 3) on Firefox trigger\n  // a click event.\n  event.which > 1);\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__method_chain__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__session__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__store__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\n\n\nvar HIDDEN = 'hidden';\nvar VISIBLE = 'visible';\nvar PAGE_ID = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"d\" /* uuid */])();\nvar SECONDS = 1000;\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\n\nvar PageVisibilityTracker = function () {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function PageVisibilityTracker(tracker, opts) {\n    _classCallCheck(this, PageVisibilityTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_5__usage__[\"b\" /* plugins */].PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    var defaultOpts = {\n      sessionTimeout: __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */].DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {}\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n    this.lastPageState = null;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = __WEBPACK_IMPORTED_MODULE_4__store__[\"a\" /* default */].getOrCreate(tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = new __WEBPACK_IMPORTED_MODULE_3__session__[\"a\" /* default */](tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].add(tracker, 'set', this.trackerSetOverride);\n\n    document.addEventListener('visibilitychange', this.handleChange);\n    window.addEventListener('unload', this.handleWindowUnload);\n    if (document.visibilityState == VISIBLE) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n\n\n  _createClass(PageVisibilityTracker, [{\n    key: 'handleChange',\n    value: function handleChange() {\n      var lastStoredChange = this.validateChangeData(this.store.get());\n\n      /** @type {PageVisibilityStoreData} */\n      var change = {\n        time: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])(),\n        state: document.visibilityState,\n        pageId: PAGE_ID\n      };\n\n      if (this.session.isExpired()) {\n        if (document.visibilityState == HIDDEN) {\n          // Hidden events should never be sent if a session has expired (if\n          // they are, they'll likely start a new session with just this event).\n          this.store.clear();\n        } else {\n          // If the session has expired, changes to visible should be considered\n          // a new pageview rather than a visibility event.\n          // This behavior ensures all sessions contain a pageview so\n          // session-level page dimensions and metrics (e.g. ga:landingPagePath\n          // and ga:entrances) are correct.\n\n          /** @type {FieldsObj} */\n          var defaultFields = { transport: 'beacon' };\n          this.tracker.send('pageview', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n\n          this.store.set(change);\n        }\n      } else {\n        if (lastStoredChange.pageId == PAGE_ID && lastStoredChange.state == VISIBLE) {\n          this.sendPageVisibilityEvent(lastStoredChange);\n        }\n        this.store.set(change);\n      }\n\n      this.lastPageState = document.visibilityState;\n    }\n\n    /**\n     * Retroactively updates the stored change data in cases where it's known to\n     * be out of sync.\n     * This plugin keeps track of each visiblity change and stores the last one\n     * in localStorage. LocalStorage is used to handle situations where the user\n     * has multiple page open at the same time and we don't want to\n     * double-report page visibility in those cases.\n     * However, a problem can occur if a user closes a page when one or more\n     * visible pages are still open. In such cases it's impossible to know\n     * which of the remaining pages the user will interact with next.\n     * To solve this problem we wait for the next change on any page and then\n     * retroactively update the stored data to reflect the current page as being\n     * the page on which the last change event occured and measure visibility\n     * from that point.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @return {PageVisibilityStoreData}\n     */\n\n  }, {\n    key: 'validateChangeData',\n    value: function validateChangeData(lastStoredChange) {\n      if (this.lastPageState == VISIBLE && lastStoredChange.state == HIDDEN && lastStoredChange.pageId != PAGE_ID) {\n        lastStoredChange.state = VISIBLE;\n        lastStoredChange.pageId = PAGE_ID;\n        this.store.set(lastStoredChange);\n      }\n      return lastStoredChange;\n    }\n\n    /**\n     * Sends a Page Visibility event with the passed event action and visibility\n     * state. If a previous state change exists within the same session, the time\n     * delta is tracked as the event label and optionally as a custom metric.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @param {number|undefined=} hitTime A hit timestap used to help ensure\n     *     original order when reporting across multiple windows/tabs.\n     */\n\n  }, {\n    key: 'sendPageVisibilityEvent',\n    value: function sendPageVisibilityEvent(lastStoredChange) {\n      var hitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        nonInteraction: true,\n        eventCategory: 'Page Visibility',\n        eventAction: 'track',\n        eventLabel: __WEBPACK_IMPORTED_MODULE_0__constants__[\"e\" /* NULL_DIMENSION */]\n      };\n      if (hitTime) {\n        defaultFields.queueTime = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])() - hitTime;\n      }\n\n      var delta = this.getTimeSinceLastStoredChange(lastStoredChange, hitTime);\n\n      // If at least a one second delta exists, report it.\n      if (delta) {\n        defaultFields.eventValue = delta;\n\n        // If a custom metric was specified, set it equal to the event value.\n        if (this.opts.visibleMetricIndex) {\n          defaultFields['metric' + this.opts.visibleMetricIndex] = delta;\n        }\n      }\n\n      this.tracker.send('event', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Detects changes to the tracker object and triggers an update if the page\n     * field has changed.\n     * @param {function(...*)} originalMethod A reference to the overridden\n     *     method.\n     * @return {function(...*)}\n     */\n\n  }, {\n    key: 'trackerSetOverride',\n    value: function trackerSetOverride(originalMethod) {\n      var _this = this;\n\n      return function () {\n        /** @type {!FieldsObj} */\n        var fields = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"f\" /* isObject */])(arguments.length <= 0 ? undefined : arguments[0]) ? arguments.length <= 0 ? undefined : arguments[0] : _defineProperty({}, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1]);\n        if (fields.page && fields.page !== _this.tracker.get('page')) {\n          if (_this.lastPageState == VISIBLE) {\n            _this.handleChange();\n          }\n        }\n        originalMethod.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * Calculates the time since the last visibility change event in the current\n     * session. If the session has expired the reported time is zero.\n     * @param {PageVisibilityStoreData} lastStoredChange\n     * @param {number=} hitTime The timestamp of the current hit, defaulting\n     *     to now.\n     * @return {number} The time (in ms) since the last change.\n     */\n\n  }, {\n    key: 'getTimeSinceLastStoredChange',\n    value: function getTimeSinceLastStoredChange(lastStoredChange) {\n      var hitTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utilities__[\"e\" /* now */])();\n\n      var isSessionActive = !this.session.isExpired();\n      var timeSinceLastStoredChange = lastStoredChange.time && Math.round((hitTime - lastStoredChange.time) / SECONDS);\n\n      return isSessionActive && timeSinceLastStoredChange > 0 ? timeSinceLastStoredChange : 0;\n    }\n\n    /**\n     * Handles responding to the `storage` event.\n     * The code on this page needs to be informed when other tabs or windows are\n     * updating the stored page visibility state data. This method checks to see\n     * if a hidden state is stored when there are still visible tabs open, which\n     * can happen if multiple windows are open at the same time.\n     * @param {PageVisibilityStoreData} newData\n     * @param {PageVisibilityStoreData} oldData\n     */\n\n  }, {\n    key: 'handleExternalStoreSet',\n    value: function handleExternalStoreSet(newData, oldData) {\n      // If the change times are the same, then the previous write only\n      // updated the active page ID. It didn't enter a new state and thus no\n      // hits should be sent.\n      if (newData.time == oldData.time) return;\n\n      // Page Visibility events must be sent by the tracker on the page\n      // where the original event occurred. So if a change happens on another\n      // page, but this page is where the previous change event occurred, then\n      // this page is the one that needs to send the event (so all dimension\n      // data is correct).\n      if (oldData.pageId == PAGE_ID && oldData.state == VISIBLE) {\n        this.sendPageVisibilityEvent(oldData, newData.time);\n      }\n    }\n\n    /**\n     * Handles responding to the `unload` event.\n     * Since some browsers don't emit a `visibilitychange` event in all cases\n     * where a page might be unloaded, it's necessary to hook into the `unload`\n     * event to ensure the correct state is always stored.\n     */\n\n  }, {\n    key: 'handleWindowUnload',\n    value: function handleWindowUnload() {\n      // If the stored visibility state isn't hidden when the unload event\n      // fires, it means the visibilitychange event didn't fire as the document\n      // was being unloaded, so we invoke it manually.\n      if (this.lastPageState != HIDDEN) {\n        this.handleChange();\n      }\n    }\n\n    /**\n     * Removes all event listeners and restores overridden methods.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      this.session.destroy();\n      __WEBPACK_IMPORTED_MODULE_1__method_chain__[\"a\" /* default */].remove(this.tracker, 'set', this.trackerSetOverride);\n      window.removeEventListener('unload', this.handleWindowUnload);\n      document.removeEventListener('visibilitychange', this.handleChange);\n    }\n  }]);\n\n  return PageVisibilityTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__provide__[\"a\" /* default */])('pageVisibilityTracker', PageVisibilityTracker);\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__provide__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__usage__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities__ = __webpack_require__(3);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\n\nvar SocialWidgetTracker = function () {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  function SocialWidgetTracker(tracker, opts) {\n    _classCallCheck(this, SocialWidgetTracker);\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__usage__[\"a\" /* trackUsage */])(tracker, __WEBPACK_IMPORTED_MODULE_1__usage__[\"b\" /* plugins */].SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    var defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"a\" /* assign */])(defaultOpts, opts);\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n\n\n  _createClass(SocialWidgetTracker, [{\n    key: 'addWidgetListeners',\n    value: function addWidgetListeners() {\n      if (window.FB) this.addFacebookEventHandlers();\n      if (window.twttr) this.addTwitterEventHandlers();\n    }\n\n    /**\n     * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons. Note: this does not capture tweet or\n     * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n     */\n\n  }, {\n    key: 'addTwitterEventHandlers',\n    value: function addTwitterEventHandlers() {\n      var _this = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.bind('tweet', _this.handleTweetEvents);\n          window.twttr.events.bind('follow', _this.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n     * official tweet and follow buttons.\n     */\n\n  }, {\n    key: 'removeTwitterEventHandlers',\n    value: function removeTwitterEventHandlers() {\n      var _this2 = this;\n\n      try {\n        window.twttr.ready(function () {\n          window.twttr.events.unbind('tweet', _this2.handleTweetEvents);\n          window.twttr.events.unbind('follow', _this2.handleFollowEvents);\n        });\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'addFacebookEventHandlers',\n    value: function addFacebookEventHandlers() {\n      try {\n        window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n     * official Facebook like button.\n     */\n\n  }, {\n    key: 'removeFacebookEventHandlers',\n    value: function removeFacebookEventHandlers() {\n      try {\n        window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n        window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n      } catch (err) {\n        // Do nothing.\n      }\n    }\n\n    /**\n     * Handles `tweet` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleTweetEvents',\n    value: function handleTweetEvents(event) {\n      // Ignores tweets from widgets that aren't the tweet button.\n      if (event.region != 'tweet') return;\n\n      var url = event.data.url || event.target.getAttribute('data-url') || location.href;\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'tweet',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `follow` events emitted by the Twitter JS SDK.\n     * @param {TwttrEvent} event The Twitter event object passed to the handler.\n     */\n\n  }, {\n    key: 'handleFollowEvents',\n    value: function handleFollowEvents(event) {\n      // Ignore follows from widgets that aren't the follow button.\n      if (event.region != 'follow') return;\n\n      var screenName = event.data.screen_name || event.target.getAttribute('data-screen-name');\n\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Twitter',\n        socialAction: 'follow',\n        socialTarget: screenName\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `like` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the like event.\n     */\n\n  }, {\n    key: 'handleLikeEvents',\n    value: function handleLikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'like',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Handles `unlike` events emitted by the Facebook JS SDK.\n     * @param {string} url The URL corresponding to the unlike event.\n     */\n\n  }, {\n    key: 'handleUnlikeEvents',\n    value: function handleUnlikeEvents(url) {\n      /** @type {FieldsObj} */\n      var defaultFields = {\n        transport: 'beacon',\n        socialNetwork: 'Facebook',\n        socialAction: 'unlike',\n        socialTarget: url\n      };\n      this.tracker.send('social', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utilities__[\"b\" /* createFieldsObj */])(defaultFields, this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n\n    /**\n     * Removes all event listeners and instance properties.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      window.removeEventListener('load', this.addWidgetListeners);\n      this.removeFacebookEventHandlers();\n      this.removeTwitterEventHandlers();\n    }\n  }]);\n\n  return SocialWidgetTracker;\n}();\n\n__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__provide__[\"a\" /* default */])('socialWidgetTracker', SocialWidgetTracker);\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__closest__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__matches__ = __webpack_require__(10);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = delegate;\n\n\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nfunction delegate(ancestor, eventType, selector, callback) {\n  var opts = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  // Defines the event listener.\n  var listener = function listener(event) {\n    var delegateTarget = void 0;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      var composedPath = event.composedPath();\n      for (var i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__matches__[\"a\" /* default */])(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__closest__[\"a\" /* default */])(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function destroy() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    }\n  };\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nfunction dispatch(element, eventType) {\n  var eventName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Event';\n  var initDict = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var event = void 0;\n  var isCustom = void 0;\n\n  // eventName is optional\n  if ((typeof eventName === 'undefined' ? 'undefined' : _typeof(eventName)) == 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict.bubbles = initDict.bubbles || false;\n  initDict.cancelable = initDict.cancelable || false;\n  initDict.composed = initDict.composed || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch (err) {\n    event = document.createEvent(eventName);\n    var initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict.bubbles, initDict.cancelable, initDict.detail);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getAttributes;\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nfunction getAttributes(element) {\n  var attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parseUrl;\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\nvar a = document.createElement('a');\nvar cache = {};\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nfunction parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = !url || url == '.' ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  var port = a.port == HTTP_PORT || a.port == HTTPS_PORT ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  var host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  var origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  var pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search\n  };\n}\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// 0.main.js","import 'autotrack/lib/plugins/clean-url-tracker';\nimport 'autotrack/lib/plugins/event-tracker';\nimport 'autotrack/lib/plugins/max-scroll-tracker';\nimport 'autotrack/lib/plugins/media-query-tracker';\nimport 'autotrack/lib/plugins/outbound-link-tracker';\nimport 'autotrack/lib/plugins/page-visibility-tracker';\nimport 'autotrack/lib/plugins/social-widget-tracker';\n\n\n/**\n * Bump this when making backwards incompatible changes to the tracking\n * implementation. This allows you to create a segment or view filter\n * that isolates only data captured with the most recent tracking changes.\n */\nconst TRACKING_VERSION = '2';\n\n\n/**\n * A global list of tracker object, randomized to ensure no one tracker\n * data is always sent first.\n */\nconst ALL_TRACKERS = shuffleArray([\n  {name: 't0', trackingId: 'UA-40829935-1'},\n  {name: 'testing', trackingId: 'UA-40829935-4'}\n]);\n\n\nconst TEST_TRACKERS = ALL_TRACKERS.filter(({name}) => /test/.test(name));\nconst NULL_VALUE = '(not set)';\n\n\nconst metrics = {\n  PAGE_VISIBLE: 'metric1',\n  MAX_SCROLL_PERCENTAGE: 'metric2',\n};\n\n\nconst dimensions = {\n  BREAKPOINT: 'dimension1',\n  RESOLUTION: 'dimension2',\n  ORIENTATION: 'dimension3',\n  HIT_SOURCE: 'dimension4',\n  URL_QUERY_PARAMS: 'dimension5',\n  METRIC_VALUE: 'dimension6',\n  CLIENT_ID: 'dimension7',\n  HIT_TYPE: 'dimension8',\n  HIT_TIME: 'dimension9',\n  HIT_ID: 'dimension10',\n  WINDOW_ID: 'dimension11',\n  VISIBILITY_STATE: 'dimension12',\n  TRACKING_VERSION: 'dimension13',\n  PAGE_PATH: 'dimension14'\n};\n\n\n// The command queue proxies.\nconst gaAll = createGaProxy(ALL_TRACKERS);\nconst gaTest = createGaProxy(TEST_TRACKERS);\n\n\n/**\n * Initializes all the analytics setup. Creates trackers and sets initial\n * values on the trackers.\n */\nexport function init() {\n  createTrackers();\n  trackErrors();\n\n  trackCustomDimensions();\n  requireAutotrackPlugins();\n}\n\n\n/**\n * Tracks the initial pageload and performance timing data associated with it.\n */\nexport function trackPageload() {\n  sendInitialPageview();\n}\n\n\n/**\n * Tracks a JavaScript error.\n * @param {Error} err The error object to track.\n */\nexport function trackError(err) {\n  gaAll('send', 'event', 'Script', 'error', err.stack || err.toString(), {\n    nonInteraction: true,\n  });\n}\n\n\n/**\n * Creates the trackers and sets the default transport and tracking\n * version fields. In non-production environments it also logs hits.\n */\nfunction createTrackers() {\n  for (let tracker of ALL_TRACKERS) {\n    window.ga('create', tracker.trackingId, 'auto', tracker.name, {\n      siteSpeedSampleRate: 10\n    });\n  }\n\n  // Ensures all hits are sent via `navigator.sendBeacon()`.\n  // Note: this cannot via the `create` command.\n  gaAll('set', 'transport', 'beacon');\n\n  // Log hits in non-production environments.\n  if (process.env.NODE_ENV != 'production') {\n    gaAll('set', 'sendHitTask', function(model) {\n      var paramsToIgnore = ['v', 'did', 't', 'tid', 'ec', 'ea', 'el', 'ev',\n          'a', 'z', 'ul', 'de', 'sd', 'sr', 'vp', 'je', 'fl', 'jid'];\n\n      var hitType = model.get('&t');\n      var hitPayload = model.get('hitPayload');\n      var hit = hitPayload\n          .split('&')\n          .map(decodeURIComponent)\n          .filter((item) => {\n            const [param] = item.split('=');\n            return !(param.charAt(0) === '_' ||\n                paramsToIgnore.indexOf(param) > -1);\n          });\n\n      var parts = [model.get('&tid'), hitType];\n      if (hitType == 'event') {\n        parts = [\n          ...parts,\n          model.get('&ec'),\n          model.get('&ea'),\n          model.get('&el'),\n        ];\n        if (model.get('&ev')) parts.push(model.get('&ev'));\n      }\n\n      window['console'].log(...parts, hit);\n    });\n  }\n}\n\n\n/**\n * Tracks any errors that may have occured on the page prior to analytics being\n * initialized, then adds an event handler to track future errors.\n */\nfunction trackErrors() {\n  // Errors that have occurred prior to this script running are stored on\n  // the `q` property of the window.onerror function.\n  const errorQueue = window.onerror.q || [];\n\n  // Override the temp `onerror()` handler to now send hits to GA.\n  window.onerror = (msg, file, line, col, error) => {\n    gaAll('send', 'event', {\n      eventCategory: 'Script',\n      eventAction: 'uncaught error',\n      eventLabel: error ? error.stack : `${msg}\\n${file}:${line}:${col}`,\n      nonInteraction: true,\n    });\n  };\n\n  // Replay any stored errors in the queue.\n  for (let error of errorQueue) {\n    window.onerror(...error);\n  }\n}\n\n\n/**\n * Sets a default dimension value for all custom dimensions on all trackers.\n */\nfunction trackCustomDimensions() {\n  // Sets a default dimension value for all custom dimensions on all trackers.\n  // This obviously must be done before setting any other custom dimensions.\n  Object.keys(dimensions).forEach((key) => {\n    gaAll('set', dimensions[key], NULL_VALUE);\n  });\n\n  // Adds tracking of dimensions known at page load time.\n  gaTest((tracker) => {\n    tracker.set({\n      [dimensions.TRACKING_VERSION]: TRACKING_VERSION,\n      [dimensions.CLIENT_ID]: tracker.get('clientId'),\n      [dimensions.WINDOW_ID]: uuid(),\n    });\n  });\n\n  // Adds tracking to record each the type, time, uuid, and visibility state\n  // of each hit immediately before it's sent.\n  gaTest((tracker) => {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    tracker.set('buildHitTask', (model) => {\n      const path = model.get('page') || location.pathname;\n      model.set(dimensions.PAGE_PATH, path),\n\n      model.set(dimensions.HIT_TYPE, model.get('hitType'), true);\n      model.set(dimensions.HIT_TIME, String(+new Date), true);\n      model.set(dimensions.HIT_ID, uuid(), true);\n      model.set(dimensions.VISIBILITY_STATE, document.visibilityState, true);\n      originalBuildHitTask(model);\n    });\n  });\n}\n\n\n/**\n * Requires select autotrack plugins for each tracker.\n */\nfunction requireAutotrackPlugins() {\n  gaAll('require', 'cleanUrlTracker', {\n    stripQuery: true,\n    queryDimensionIndex: getDefinitionIndex(dimensions.URL_QUERY_PARAMS),\n    indexFilename: 'index.html',\n    trailingSlash: 'add',\n  });\n  gaAll('require', 'eventTracker');\n  gaTest('require', 'maxScrollTracker', {\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    maxScrollMetricIndex: getDefinitionIndex(metrics.MAX_SCROLL_PERCENTAGE),\n  });\n  gaAll('require', 'mediaQueryTracker', {\n    definitions: [\n      {\n        name: 'Breakpoint',\n        dimensionIndex: 1,\n        items: [\n          {name: 'xs', media: 'all'},\n          {name: 'sm', media: '(min-width: 384px)'},\n          {name: 'md', media: '(min-width: 576px)'},\n          {name: 'lg', media: '(min-width: 768px)'}\n        ]\n      },\n      {\n        name: 'Resolution',\n        dimensionIndex: 2,\n        items: [\n          {name: '1x',   media: 'all'},\n          {name: '1.5x', media: '(-webkit-min-device-pixel-ratio: 1.5), ' +\n                                '(min-resolution: 144dpi)'},\n          {name: '2x',   media: '(-webkit-min-device-pixel-ratio: 2), ' +\n                                '(min-resolution: 192dpi)'},\n        ]\n      },\n      {\n        name: 'Orientation',\n        dimensionIndex: 3,\n        items: [\n          {name: 'landscape', media: '(orientation: landscape)'},\n          {name: 'portrait',  media: '(orientation: portrait)'}\n        ]\n      }\n    ]\n  });\n  gaAll('require', 'outboundLinkTracker');\n  gaTest('require', 'pageVisibilityTracker', {\n    visibleMetricIndex: getDefinitionIndex(metrics.PAGE_VISIBLE),\n    sessionTimeout: 30,\n    timeZone: 'America/Los_Angeles',\n    fieldsObj: {[dimensions.HIT_SOURCE]: 'pageVisibilityTracker'},\n  });\n  gaAll('require', 'socialWidgetTracker');\n}\n\n\n/**\n * Sends the initial pageview.\n */\nfunction sendInitialPageview() {\n  gaAll('send', 'pageview', {[dimensions.HIT_SOURCE]: 'pageload'});\n}\n\n\n/**\n * Creates a ga() proxy function that calls commands on all but the\n * excluded trackers.\n * @param {Array} trackers an array or objects containing the `name` and\n *     `trackingId` fields.\n * @return {Function} The proxied ga() function.\n */\nfunction createGaProxy(trackers) {\n  return (command, ...args) => {\n    for (let {name} of trackers) {\n      if (typeof command == 'function') {\n        window.ga(() => {\n          command(window.ga.getByName(name));\n        });\n      } else {\n        window.ga(`${name}.${command}`, ...args);\n      }\n    }\n  };\n}\n\n\n/**\n * Accepts a custom dimension or metric and returns it's numerical index.\n * @param {string} definition The definition string (e.g. 'dimension1').\n * @return {number} The definition index.\n */\nfunction getDefinitionIndex(definition) {\n  return +/\\d+$/.exec(definition)[0];\n}\n\n\n/**\n * Randomizes array element order in-place using Durstenfeld shuffle algorithm.\n * http://goo.gl/91pjZs\n * @param {Array} array The input array.\n * @return {Array} The randomized array.\n */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\nconst uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./assets/javascript/analytics.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {getAttributes} from 'dom-utils';\n\n\n/**\n * Accepts default and user override fields and an optional tracker, hit\n * filter, and target element and returns a single object that can be used in\n * `ga('send', ...)` commands.\n * @param {FieldsObj} defaultFields The default fields to return.\n * @param {FieldsObj} userFields Fields set by the user to override the\n *     defaults.\n * @param {Tracker=} tracker The tracker object to apply the hit filter to.\n * @param {Function=} hitFilter A filter function that gets\n *     called with the tracker model right before the `buildHitTask`. It can\n *     be used to modify the model for the current hit only.\n * @param {Element=} target If the hit originated from an interaction\n *     with a DOM element, hitFilter is invoked with that element as the\n *     second argument.\n * @return {!FieldsObj} The final fields object.\n */\nexport function createFieldsObj(defaultFields, userFields,\n    tracker = undefined, hitFilter = undefined, target = undefined) {\n  if (typeof hitFilter == 'function') {\n    const originalBuildHitTask = tracker.get('buildHitTask');\n    return {\n      buildHitTask: (/** @type {!Model} */ model) => {\n        model.set(defaultFields, null, true);\n        model.set(userFields, null, true);\n        hitFilter(model, target);\n        originalBuildHitTask(model);\n      },\n    };\n  } else {\n    return assign({}, defaultFields, userFields);\n  }\n}\n\n\n/**\n * Retrieves the attributes from an DOM element and returns a fields object\n * for all attributes matching the passed prefix string.\n * @param {Element} element The DOM element to get attributes from.\n * @param {string} prefix An attribute prefix. Only the attributes matching\n *     the prefix will be returned on the fields object.\n * @return {FieldsObj} An object of analytics.js fields and values\n */\nexport function getAttributeFields(element, prefix) {\n  const attributes = getAttributes(element);\n  const attributeFields = {};\n\n  Object.keys(attributes).forEach(function(attribute) {\n    // The `on` prefix is used for event handling but isn't a field.\n    if (attribute.indexOf(prefix) === 0 && attribute != prefix + 'on') {\n      let value = attributes[attribute];\n\n      // Detects Boolean value strings.\n      if (value == 'true') value = true;\n      if (value == 'false') value = false;\n\n      const field = camelCase(attribute.slice(prefix.length));\n      attributeFields[field] = value;\n    }\n  });\n\n  return attributeFields;\n}\n\n\n/**\n * Accepts a function to be invoked once the DOM is ready. If the DOM is\n * already ready, the callback is invoked immediately.\n * @param {!Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState == 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n\n/**\n * Returns a function, that, as long as it continues to be called, will not\n * actually run. The function will only run after it stops being called for\n * `wait` milliseconds.\n * @param {!Function} fn The function to debounce.\n * @param {number} wait The debounce wait timeout in ms.\n * @return {!Function} The debounced function.\n */\nexport function debounce(fn, wait) {\n  let timeout;\n  return function(...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), wait);\n  };\n}\n\n\n/**\n * Accepts a function and returns a wrapped version of the function that is\n * expected to be called elsewhere in the system. If it's not called\n * elsewhere after the timeout period, it's called regardless. The wrapper\n * function also prevents the callback from being called more than once.\n * @param {!Function} callback The function to call.\n * @param {number=} wait How many milliseconds to wait before invoking\n *     the callback.\n * @return {!Function} The wrapped version of the passed function.\n */\nexport function withTimeout(callback, wait = 2000) {\n  let called = false;\n  const fn = function() {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n\n/**\n * A small shim of Object.assign that aims for brevity over spec-compliant\n * handling all the edge cases.\n * @param {!Object} target The target object to assign to.\n * @param {...Object} sources Additional objects who properties should be\n *     assigned to target.\n * @return {!Object} The modified target object.\n */\nexport const assign = Object.assign || function(target, ...sources) {\n  for (let source, i = 0; source = sources[i]; i++) {\n    for (let key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n/**\n * Accepts a string containing hyphen or underscore word separators and\n * converts it to camelCase.\n * @param {string} str The string to camelCase.\n * @return {string} The camelCased version of the string.\n */\nexport function camelCase(str) {\n  return str.replace(/[\\-\\_]+(\\w?)/g, function(match, p1) {\n    return p1.toUpperCase();\n  });\n}\n\n\n/**\n * Capitalizes the first letter of a string.\n * @param {string} str The input string.\n * @return {string} The capitalized string\n */\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Indicates whether the passed variable is a JavaScript object.\n * @param {*} value The input variable to test.\n * @return {boolean} Whether or not the test is an object.\n */\nexport function isObject(value) {\n  return typeof value == 'object' && value !== null;\n}\n\n\n/**\n * Accepts a value that may or may not be an array. If it is not an array,\n * it is returned as the first item in a single-item array.\n * @param {*} value The value to convert to an array if it is not.\n * @return {!Array} The array-ified value.\n */\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n\n/**\n * @return {number} The current date timestamp\n */\nexport function now() {\n  return +new Date();\n}\n\n\n/*eslint-disable */\n// https://gist.github.com/jed/982883\n/** @param {?=} a */\nexport const uuid = function b(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,b)};\n/*eslint-enable */\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/utilities.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {DEV_ID} from './constants';\nimport {capitalize} from './utilities';\n\n\n/**\n * Provides a plugin for use with analytics.js, accounting for the possibility\n * that the global command queue has been renamed or not yet defined.\n * @param {string} pluginName The plugin name identifier.\n * @param {Function} pluginConstructor The plugin constructor function.\n */\nexport default function provide(pluginName, pluginConstructor) {\n  const gaAlias = window.GoogleAnalyticsObject || 'ga';\n  window[gaAlias] = window[gaAlias] || function(...args) {\n    (window[gaAlias].q = window[gaAlias].q || []).push(args);\n  };\n\n  // Adds the autotrack dev ID if not already included.\n  window.gaDevIds = window.gaDevIds || [];\n  if (window.gaDevIds.indexOf(DEV_ID) < 0) {\n    window.gaDevIds.push(DEV_ID);\n  }\n\n  // Formally provides the plugin for use with analytics.js.\n  window[gaAlias]('provide', pluginName, pluginConstructor);\n\n  // Registers the plugin on the global gaplugins object.\n  window.gaplugins = window.gaplugins || {};\n  window.gaplugins[capitalize(pluginName)] = pluginConstructor;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/provide.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {USAGE_PARAM, VERSION, VERSION_PARAM} from './constants';\n\n\nexport const plugins = {\n  CLEAN_URL_TRACKER: 1,\n  EVENT_TRACKER: 2,\n  IMPRESSION_TRACKER: 3,\n  MEDIA_QUERY_TRACKER: 4,\n  OUTBOUND_FORM_TRACKER: 5,\n  OUTBOUND_LINK_TRACKER: 6,\n  PAGE_VISIBILITY_TRACKER: 7,\n  SOCIAL_WIDGET_TRACKER: 8,\n  URL_CHANGE_TRACKER: 9,\n  MAX_SCROLL_TRACKER: 10,\n};\n\n\nconst PLUGIN_COUNT = Object.keys(plugins).length;\n\n\n\n/**\n * Tracks the usage of the passed plugin by encoding a value into a usage\n * string sent with all hits for the passed tracker.\n * @param {!Tracker} tracker The analytics.js tracker object.\n * @param {number} plugin The plugin enum.\n */\nexport function trackUsage(tracker, plugin) {\n  trackVersion(tracker);\n  trackPlugin(tracker, plugin);\n}\n\n\n/**\n * Converts a hexadecimal string to a binary string.\n * @param {string} hex A hexadecimal numeric string.\n * @return {string} a binary numeric string.\n */\nfunction convertHexToBin(hex) {\n  return parseInt(hex || '0', 16).toString(2);\n}\n\n\n/**\n * Converts a binary string to a hexadecimal string.\n * @param {string} bin A binary numeric string.\n * @return {string} a hexadecimal numeric string.\n */\nfunction convertBinToHex(bin) {\n  return parseInt(bin || '0', 2).toString(16);\n}\n\n\n/**\n * Adds leading zeros to a string if it's less than a minimum length.\n * @param {string} str A string to pad.\n * @param {number} len The minimum length of the string\n * @return {string} The padded string.\n */\nfunction padZeros(str, len) {\n  if (str.length < len) {\n    let toAdd = len - str.length;\n    while (toAdd) {\n      str = '0' + str;\n      toAdd--;\n    }\n  }\n  return str;\n}\n\n\n/**\n * Accepts a binary numeric string and flips the digit from 0 to 1 at the\n * specified index.\n * @param {string} str The binary numeric string.\n * @param {number} index The index to flip the bit.\n * @return {string} The new binary string with the bit flipped on\n */\nfunction flipBitOn(str, index) {\n  return str.substr(0, index) + 1 + str.substr(index + 1);\n}\n\n\n/**\n * Accepts a tracker and a plugin index and flips the bit at the specified\n * index on the tracker's usage parameter.\n * @param {Object} tracker An analytics.js tracker.\n * @param {number} pluginIndex The index of the plugin in the global list.\n */\nfunction trackPlugin(tracker, pluginIndex) {\n  const usageHex = tracker.get('&' + USAGE_PARAM);\n  let usageBin = padZeros(convertHexToBin(usageHex), PLUGIN_COUNT);\n\n  // Flip the bit of the plugin being tracked.\n  usageBin = flipBitOn(usageBin, PLUGIN_COUNT - pluginIndex);\n\n  // Stores the modified usage string back on the tracker.\n  tracker.set('&' + USAGE_PARAM, convertBinToHex(usageBin));\n}\n\n\n/**\n * Accepts a tracker and adds the current version to the version param.\n * @param {Object} tracker An analytics.js tracker.\n */\nfunction trackVersion(tracker) {\n  tracker.set('&' + VERSION_PARAM, VERSION);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/usage.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport const VERSION = '2.0.0-rc.2';\nexport const DEV_ID = 'i5iSjo';\n\nexport const VERSION_PARAM = '_av';\nexport const USAGE_PARAM = '_au';\n\nexport const NULL_DIMENSION = '(not set)';\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/constants.js","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview\n * The functions exported by this module make it easier (and safer) to override\n * foreign object methods (in a modular way) and respond to or modify their\n * invocation. The primary feature is the ability to override a method without\n * worrying if it's already been overridden somewhere else in the codebase. It\n * also allows for safe restoring of an overridden method by only fully\n * restoring a method once all overrides have been removed.\n */\n\n\nconst instances = [];\n\n\n/**\n * A class that wraps a foreign object method and emit events before and\n * after the original method is called.\n */\nexport default class MethodChain {\n  /**\n   * Adds the passed override method to the list of method chain overrides.\n   * @param {!Object} context The object containing the method to chain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to add.\n   */\n  static add(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).add(methodOverride);\n  }\n\n  /**\n   * Removes a method chain added via `add()`. If the override is the\n   * only override added, the original method is restored.\n   * @param {!Object} context The object containing the method to unchain.\n   * @param {string} methodName The name of the method on the object.\n   * @param {!Function} methodOverride The override method to remove.\n   */\n  static remove(context, methodName, methodOverride) {\n    getOrCreateMethodChain(context, methodName).remove(methodOverride)\n  }\n\n  /**\n   * Wraps a foreign object method and overrides it. Also stores a reference\n   * to the original method so it can be restored later.\n   * @param {!Object} context The object containing the method.\n   * @param {string} methodName The name of the method on the object.\n   */\n  constructor(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this.isTask = /Task$/.test(methodName);\n\n    this.originalMethodReference = this.isTask ?\n        context.get(methodName) : context[methodName];\n\n    this.methodChain = [];\n    this.boundMethodChain = [];\n\n    // Wraps the original method.\n    this.wrappedMethod = (...args) => {\n      const lastBoundMethod =\n          this.boundMethodChain[this.boundMethodChain.length - 1];\n\n      return lastBoundMethod(...args);\n    };\n\n    // Override original method with the wrapped one.\n    if (this.isTask) {\n      context.set(methodName, this.wrappedMethod);\n    } else {\n      context[methodName] = this.wrappedMethod;\n    }\n  }\n\n  /**\n   * Adds a method to the method chain.\n   * @param {!Function} overrideMethod The override method to add.\n   */\n  add(overrideMethod) {\n    this.methodChain.push(overrideMethod);\n    this.rebindMethodChain();\n  }\n\n  /**\n   * Removes a method from the method chain and restores the prior order.\n   * @param {!Function} overrideMethod The override method to remove.\n   */\n  remove(overrideMethod) {\n    const index = this.methodChain.indexOf(overrideMethod);\n    if (index > -1) {\n      this.methodChain.splice(index, 1);\n      if (this.methodChain.length > 0) {\n        this.rebindMethodChain();\n      } else {\n        this.destroy();\n      }\n    }\n  }\n\n  /**\n   * Loops through the method chain array and recreates the bound method\n   * chain array. This is necessary any time a method is added or removed\n   * to ensure proper original method context and order.\n   */\n  rebindMethodChain() {\n    this.boundMethodChain = [];\n    for (let method, i = 0; method = this.methodChain[i]; i++) {\n      const previousMethod = this.boundMethodChain[i - 1] ||\n          this.originalMethodReference.bind(this.context);\n      this.boundMethodChain.push(method(previousMethod));\n    }\n  }\n\n  /**\n   * Calls super and destroys the instance if no registered handlers remain.\n   */\n  destroy() {\n    const index = instances.indexOf(this);\n    if (index > -1) {\n      instances.splice(index, 1);\n      if (this.isTask) {\n        this.context.set(this.methodName, this.originalMethodReference);\n      } else {\n        this.context[this.methodName] = this.originalMethodReference;\n      }\n    }\n  }\n}\n\n\n/**\n * Gets a MethodChain instance for the passed object and method. If the method\n * has already been wrapped via an existing MethodChain instance, that\n * instance is returned.\n * @param {!Object} context The object containing the method.\n * @param {string} methodName The name of the method on the object.\n * @return {!MethodChain}\n */\nfunction getOrCreateMethodChain(context, methodName) {\n  let methodChain = instances\n      .filter((h) => h.context == context && h.methodName == methodName)[0];\n\n  if (!methodChain) {\n    methodChain = new MethodChain(context, methodName);\n    instances.push(methodChain);\n  }\n  return methodChain;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/method-chain.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport EventEmitter from './event-emitter';\nimport {assign} from './utilities';\n\n\nconst AUTOTRACK_PREFIX = 'autotrack';\nconst instances = {};\nlet isListening = false;\n\n\n/**\n * A storage object to simplify interacting with localStorage.\n */\nexport default class Store extends EventEmitter {\n  /**\n   * Gets an existing instance for the passed arguements or creates a new\n   * instance if one doesn't exist.\n   * @param {string} trackingId The tracking ID for the GA property.\n   * @param {string} namespace A namespace unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   * @return {Store} The Store instance.\n   */\n  static getOrCreate(trackingId, namespace, defaults) {\n    const key = [AUTOTRACK_PREFIX, trackingId, namespace].join(':');\n\n    // Don't create multiple instances for the same tracking Id and namespace.\n    if (!instances[key]) {\n      instances[key] = new Store(key, defaults);\n      instances[key].key = key;\n      if (!isListening) initStorageListener();\n    }\n    return instances[key];\n  }\n\n  /**\n   * @param {string} key A key unique to this store.\n   * @param {Object=} defaults An optional object of key/value defaults.\n   */\n  constructor(key, defaults) {\n    super();\n    this.key = key;\n    this.defaults = defaults || {};\n  }\n\n  /**\n   * Gets the data stored in localStorage for this store.\n   * @return {!Object} The stored data merged with the defaults.\n   */\n  get() {\n    const storedItem = String(window.localStorage &&\n        window.localStorage.getItem(this.key));\n\n    if (typeof storedItem != 'string') return {};\n    // TODO(philipwalton): Implement schema migrations if/when a new\n    // schema version is introduced.\n    return parse(storedItem, this.defaults);\n  }\n\n  /**\n   * Saves the passed data object to localStorage,\n   * merging it with the existing data.\n   * @param {Object} newData The data to save.\n   */\n  set(newData) {\n    const oldData = this.get();\n    const mergedData = assign(oldData, newData);\n    window.localStorage &&\n        window.localStorage.setItem(this.key, JSON.stringify(mergedData));\n  }\n\n  /**\n   * Clears the data in localStorage for the current store.\n   */\n  clear() {\n    window.localStorage && window.localStorage.removeItem(this.key);\n  }\n\n  /**\n   * Removes the store instance for the global instances map. If this is the\n   * last store instance, the storage listener is also removed.\n   * Note: this does not erase the stored data. Use `clear()` for that.\n   */\n  destroy() {\n    delete instances[this.key];\n    if (!Object.keys(instances).length) {\n      removeStorageListener();\n    }\n  }\n}\n\n\n/**\n * Adds a single storage event listener and flips the global `isListening`\n * flag so multiple events aren't added.\n */\nfunction initStorageListener() {\n  window.addEventListener('storage', storageListener);\n  isListening = true;\n}\n\n\n/**\n * Removes the storage event listener and flips the global `isListening`\n * flag so it can be re-added later.\n */\nfunction removeStorageListener() {\n  window.removeEventListener('storage', storageListener);\n  isListening = false;\n}\n\n\n/**\n * The global storage event listener.\n * @param {!Event} event The DOM event.\n */\nfunction storageListener(event) {\n  const store = instances[event.key];\n  if (store) {\n    const oldData = parse(event.oldValue, store.defaults);\n    const newData = parse(event.newValue, store.defaults);\n    store.emit('externalSet', newData, oldData);\n  }\n}\n\n\n/**\n * Parses a source string as JSON and merges the result with the passed\n * defaults object. If an error occurs while\n * @param {string} source A JSON string of data.\n * @param {!Object} defaults An object of key/value defaults.\n * @return {!Object} The parsed data object merged with the passed defaults.\n */\nfunction parse(source, defaults) {\n  let data;\n  try {\n    data = /** @type {!Object} */ (JSON.parse(source));\n  } catch(err) {\n    data = {};\n  }\n  return assign({}, defaults, data);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/store.js","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/matches.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport MethodChain from './method-chain';\nimport Store from './store';\nimport {now} from './utilities';\n\n\nconst SECONDS = 1000;\nconst MINUTES = 60 * SECONDS;\n\n\nconst instances = {};\n\n\n/**\n * A session management class that helps track session boundaries\n * across multiple open tabs/windows.\n */\nexport default class Session {\n  /**\n   * Gets an existing instance for the passed arguments or creates a new\n   * instance if one doesn't exist.\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   * @return {Session} The Session instance.\n   */\n  static getOrCreate(tracker, timeout, timeZone) {\n    // Don't create multiple instances for the same property.\n    const trackingId = tracker.get('trackingId');\n    if (instances[trackingId]) {\n      return instances[trackingId];\n    } else {\n      return instances[trackingId] = new Session(tracker, timeout, timeZone);\n    }\n  }\n\n  /**\n   * @param {!Tracker} tracker An analytics.js tracker object.\n   * @param {number} timeout The session timeout (in minutes). This value\n   *     should match what's set in the \"Session settings\" section of the\n   *     Google Analytics admin.\n   * @param {string=} timeZone The optional IANA time zone of the view. This\n   *     value should match what's set in the \"View settings\" section of the\n   *     Google Analytics admin. (Note: this assumes all views for the property\n   *     use the same time zone. If that's not true, it's better not to use\n   *     this feature).\n   */\n  constructor(tracker, timeout, timeZone) {\n    this.tracker = tracker;\n    this.timeout = timeout || Session.DEFAULT_TIMEOUT;\n    this.timeZone = timeZone;\n\n    // Binds methods.\n    this.sendHitTaskOverride = this.sendHitTaskOverride.bind(this);\n\n    // Overrides into the trackers sendHitTask method.\n    MethodChain.add(tracker, 'sendHitTask', this.sendHitTaskOverride);\n\n    // Some browser doesn't support various features of the\n    // `Intl.DateTimeFormat` API, so we have to try/catch it. Consequently,\n    // this allows us to assume the presence of `this.dateTimeFormatter` means\n    // it works in the current browser.\n    try {\n      this.dateTimeFormatter =\n          new Intl.DateTimeFormat('en-US', {timeZone: this.timeZone});\n    } catch(err) {\n      // Do nothing.\n    }\n\n    // Creates the session store and adds change listeners.\n    /** @type {SessionStoreData} */\n    const defaultProps = {\n      hitTime: 0,\n      isExpired: false,\n    };\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'session', defaultProps);\n  }\n\n  /**\n   * Accepts a tracker object and returns whether or not the session for that\n   * tracker has expired. A session can expire for two reasons:\n   *   - More than 30 minutes has elapsed since the previous hit\n   *     was sent (The 30 minutes number is the Google Analytics default, but\n   *     it can be modified in GA admin \"Session settings\").\n   *   - A new day has started since the previous hit, in the\n   *     specified time zone (should correspond to the time zone of the\n   *     property's views).\n   *\n   * Note: since real session boundaries are determined at processing time,\n   * this is just a best guess rather than a source of truth.\n   *\n   * @param {SessionStoreData=} sessionData An optional sessionData object\n   *     which avoids an additional localStorage read if the data is known to\n   *     be fresh.\n   * @return {boolean} True if the session has expired.\n   */\n  isExpired(sessionData = this.store.get()) {\n    // True if the sessionControl field was set to 'end' on the previous hit.\n    if (sessionData.isExpired) return true;\n\n    const currentDate = new Date();\n    const oldHitTime = sessionData.hitTime;\n    const oldHitDate = oldHitTime && new Date(oldHitTime);\n\n    if (oldHitTime) {\n      if (currentDate - oldHitDate > (this.timeout * MINUTES)) {\n        // If more time has elapsed than the session expiry time,\n        // the session has expired.\n        return true;\n      } else if (this.datesAreDifferentInTimezone(currentDate, oldHitDate)) {\n        // A new day has started since the previous hit, which means the\n        // session has expired.\n        return true;\n      }\n    }\n\n    // For all other cases return false.\n    return false;\n  }\n\n  /**\n   * Returns true if (and only if) the timezone date formatting is supported\n   * in the current browser and if the two dates are diffinitiabely not the\n   * same date in the session timezone. Anything short of this returns false.\n   * @param {!Date} d1\n   * @param {!Date} d2\n   * @return {boolean}\n   */\n  datesAreDifferentInTimezone(d1, d2) {\n    if (!this.dateTimeFormatter) {\n      return false;\n    } else {\n      return this.dateTimeFormatter.format(d1)\n          != this.dateTimeFormatter.format(d2);\n    }\n\n\n  }\n\n  /**\n   * Keeps track of when the previous hit was sent to determine if a session\n   * has expired. Also inspects the `sessionControl` field to handles\n   * expiration accordingly.\n   * @param {function(!Model)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(!Model)}\n   */\n  sendHitTaskOverride(originalMethod) {\n    return (model) => {\n      originalMethod(model);\n\n      const sessionData = this.store.get();\n      const isSessionExpired = this.isExpired(sessionData);\n      const sessionControl = model.get('sessionControl');\n\n      const sessionWillStart = sessionControl == 'start' || isSessionExpired;\n      const sessionWillEnd = sessionControl == 'end';\n\n      // Update the stored session data.\n      sessionData.hitTime = now();\n      if (sessionWillStart) {\n        sessionData.isExpired = false;\n      }\n      if (sessionWillEnd) {\n        sessionData.isExpired = true;\n      }\n      this.store.set(sessionData);\n    }\n  }\n\n  /**\n   * Restores the tracker's original `sendHitTask` to the state before\n   * session control was initialized and removes this instance from the global\n   * store.\n   */\n  destroy() {\n    MethodChain.remove(this.tracker, 'sendHitTask', this.sendHitTaskOverride);\n    this.store.destroy();\n    delete instances[this.tracker.get('trackingId')];\n  }\n}\n\n\nSession.DEFAULT_TIMEOUT = 30; // minutes\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/session.js","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/closest.js","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/parents.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * An simple reimplementation of the native Node.js EventEmitter class.\n * The goal of this implementation is to be as small as possible.\n */\nexport default class EventEmitter {\n  /**\n   * Creates the event registry.\n   */\n  constructor() {\n    this.registry_ = {};\n  }\n\n  /**\n   * Adds a handler function to the registry for the passed event.\n   * @param {string} event The event name.\n   * @param {!Function} fn The handler to be invoked when the passed\n   *     event is emitted.\n   */\n  on(event, fn) {\n    this.getRegistry_(event).push(fn);\n  }\n\n  /**\n   * Removes a handler function from the registry for the passed event.\n   * @param {string=} event The event name.\n   * @param {Function=} fn The handler to be removed.\n   */\n  off(event = undefined, fn = undefined) {\n    if (event && fn) {\n      const eventRegistry = this.getRegistry_(event);\n      const handlerIndex = eventRegistry.indexOf(fn);\n      if (handlerIndex > -1) {\n        eventRegistry.splice(handlerIndex, 1);\n      }\n    } else {\n      this.registry_ = {};\n    }\n  }\n\n  /**\n   * Runs all registered handlers for the passed event with the optional args.\n   * @param {string} event The event name.\n   * @param {...*} args The arguments to be passed to the handler.\n   */\n  emit(event, ...args) {\n    this.getRegistry_(event).forEach((fn) => fn(...args));\n  }\n\n  /**\n   * Returns the total number of event handlers currently registered.\n   * @return {number}\n   */\n  getEventCount() {\n    let eventCount = 0;\n    Object.keys(this.registry_).forEach((event) => {\n      eventCount += this.getRegistry_(event).length;\n    });\n    return eventCount;\n  }\n\n  /**\n   * Returns an array of handlers associated with the passed event name.\n   * If no handlers have been registered, an empty array is returned.\n   * @private\n   * @param {string} event The event name.\n   * @return {!Array} An array of handler functions.\n   */\n  getRegistry_(event) {\n    return this.registry_[event] = (this.registry_[event] || []);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/event-emitter.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign} from '../utilities';\n\n\n/**\n * Class for the `cleanUrlTracker` analytics.js plugin.\n * @implements {CleanUrlTrackerPublicInterface}\n */\nclass CleanUrlTracker {\n  /**\n   * Registers clean URL tracking on a tracker object. The clean URL tracker\n   * removes query parameters from the page value reported to Google Analytics.\n   * It also helps to prevent tracking similar URLs, e.g. sometimes ending a\n   * URL with a slash and sometimes not.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?CleanUrlTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.CLEAN_URL_TRACKER);\n\n    /** @type {CleanUrlTrackerOpts} */\n    const defaultOpts = {\n      // stripQuery: undefined,\n      // queryDimensionIndex: undefined,\n      // indexFilename: undefined,\n      // trailingSlash: undefined,\n      // urlFilter: undefined,\n    };\n    this.opts = /** @type {CleanUrlTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    /** @type {string|null} */\n    this.queryDimension = this.opts.stripQuery &&\n        this.opts.queryDimensionIndex ?\n            `dimension${this.opts.queryDimensionIndex}` : null;\n\n    // Binds methods to `this`.\n    this.trackerGetOverride = this.trackerGetOverride.bind(this);\n    this.buildHitTaskOverride = this.buildHitTaskOverride.bind(this);\n\n    // Override built-in tracker method to watch for changes.\n    MethodChain.add(tracker, 'get', this.trackerGetOverride);\n    MethodChain.add(tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n\n  /**\n   * Ensures reads of the tracker object by other plugins always see the\n   * \"cleaned\" versions of all URL fields.\n   * @param {function(string):*} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(string):*}\n   */\n  trackerGetOverride(originalMethod) {\n    return (field) => {\n      if (field == 'page' || field == this.queryDimension) {\n        const fieldsObj = /** @type {!FieldsObj} */ ({\n          location: originalMethod('location'),\n          page: originalMethod('page'),\n        });\n        const cleanedFieldsObj = this.cleanUrlFields(fieldsObj);\n        return cleanedFieldsObj[field];\n      } else {\n        return originalMethod(field);\n      }\n    };\n  }\n\n  /**\n   * Cleans URL fields passed in a send command.\n   * @param {function(!Model)} originalMethod A reference to the\n   *     overridden method.\n   * @return {function(!Model)}\n   */\n  buildHitTaskOverride(originalMethod) {\n    return (model) => {\n      const cleanedFieldsObj = this.cleanUrlFields({\n        location: model.get('location'),\n        page: model.get('page'),\n      });\n      model.set(cleanedFieldsObj, null, true);\n      originalMethod(model);\n    };\n  }\n\n  /**\n   * Accepts of fields object containing URL fields and returns a new\n   * fields object with the URLs \"cleaned\" according to the tracker options.\n   * @param {!FieldsObj} fieldsObj\n   * @return {!FieldsObj}\n   */\n  cleanUrlFields(fieldsObj) {\n    const url = parseUrl(\n        /** @type {string} */ (fieldsObj.page || fieldsObj.location));\n\n    let pathname = url.pathname;\n\n    // If an index filename was provided, remove it if it appears at the end\n    // of the URL.\n    if (this.opts.indexFilename) {\n      const parts = pathname.split('/');\n      if (this.opts.indexFilename == parts[parts.length - 1]) {\n        parts[parts.length - 1] = '';\n        pathname = parts.join('/');\n      }\n    }\n\n    // Ensure the URL ends with or doesn't end with slash based on the\n    // `trailingSlash` option. Note that filename URLs should never contain\n    // a trailing slash.\n    if (this.opts.trailingSlash == 'remove') {\n        pathname = pathname.replace(/\\/+$/, '');\n    } else if (this.opts.trailingSlash == 'add') {\n      const isFilename = /\\.\\w+$/.test(pathname);\n      if (!isFilename && pathname.substr(-1) != '/') {\n        pathname = pathname + '/';\n      }\n    }\n\n    /** @type {!FieldsObj} */\n    const cleanedFieldsObj = {\n      page: pathname + (!this.opts.stripQuery ? url.search : '')\n    }\n    if (fieldsObj.location) {\n      cleanedFieldsObj.location = fieldsObj.location;\n    }\n    if (this.queryDimension) {\n      cleanedFieldsObj[this.queryDimension] =\n          url.search.slice(1) || NULL_DIMENSION;\n    }\n\n    // Apply the `urlFieldsFilter()` option if passed.\n    if (typeof this.opts.urlFieldsFilter == 'function') {\n      /** @type {!FieldsObj} */\n      const userCleanedFieldsObj =\n          this.opts.urlFieldsFilter(cleanedFieldsObj, parseUrl);\n\n      // Ensure only the URL fields are returned.\n      return {\n        page: userCleanedFieldsObj.page,\n        location: userCleanedFieldsObj.location,\n        [this.queryDimension]: userCleanedFieldsObj[this.queryDimension],\n      };\n    } else {\n      return cleanedFieldsObj;\n    }\n  }\n\n  /**\n   * Restores all overridden tasks and methods.\n   */\n  remove() {\n    MethodChain.remove(this.tracker, 'get', this.trackerGetOverride);\n    MethodChain.remove(this.tracker, 'buildHitTask', this.buildHitTaskOverride);\n  }\n}\n\n\nprovide('cleanUrlTracker', CleanUrlTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/clean-url-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, getAttributeFields} from '../utilities';\n\n\n/**\n * Class for the `eventTracker` analytics.js plugin.\n * @implements {EventTrackerPublicInterface}\n */\nclass EventTracker {\n  /**\n   * Registers declarative event tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?EventTrackerOpts} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.EVENT_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {EventTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {EventTrackerOpts} */ (assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleEvents = this.handleEvents.bind(this);\n\n    const selector = '[' + this.opts.attributePrefix + 'on]';\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, selector,\n          this.handleEvents, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all clicks on elements with event attributes.\n   * @param {Event} event The DOM click event.\n   * @param {Element} element The delegated DOM element target.\n   */\n  handleEvents(event, element) {\n    const prefix = this.opts.attributePrefix;\n\n    // Ensures the event type matches the one specified on the element.\n    if (event.type != element.getAttribute(prefix + 'on')) return;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {transport: 'beacon'};\n    const attributeFields = getAttributeFields(element, prefix);\n    const userFields = assign({}, this.opts.fieldsObj, attributeFields);\n    const hitType = attributeFields.hitType || 'event';\n\n    this.tracker.send(hitType, createFieldsObj(defaultFields,\n        userFields, this.tracker, this.opts.hitFilter, element));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('eventTracker', EventTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/event-tracker.js","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {parseUrl} from 'dom-utils';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, debounce, isObject} from '../utilities';\n\n\n/**\n * Class for the `maxScrollQueryTracker` analytics.js plugin.\n * @implements {MaxScrollTrackerPublicInterface}\n */\nclass MaxScrollTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MAX_SCROLL_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {MaxScrollTrackerOpts} */\n    const defaultOpts = {\n      increaseThreshold: 20,\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // maxScrollMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {MaxScrollTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.pagePath = this.getPagePath();\n\n    // Binds methods to `this`.\n    this.handleScroll = debounce(this.handleScroll.bind(this), 500);\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/max-scroll-tracker');\n\n    // Creates the session and binds session events.\n    this.session = new Session(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    this.listenForMaxScrollChanges();\n  }\n\n\n  /**\n   * Adds a scroll event listener if the max scroll percentage for the\n   * current page isn't already at 100%.\n   */\n  listenForMaxScrollChanges() {\n    const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n    if (maxScrollPercentage < 100) {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }\n\n\n  /**\n   * Removes an added scroll listener.\n   */\n  stopListeningForMaxScrollChanges() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n\n  /**\n   * Handles the scroll event. If the current scroll percentage is greater\n   * that the stored scroll event by at least the specified increase threshold,\n   * send an event with the increase amount.\n   */\n  handleScroll() {\n    const pageHeight = getPageHeight();\n    const scrollPos = window.pageYOffset; // scrollY isn't supported in IE.\n    const windowHeight = window.innerHeight;\n\n    // Ensure scrollPercentage is an integer between 0 and 100.\n    const scrollPercentage = Math.min(100, Math.max(0,\n        Math.round(100 * (scrollPos / (pageHeight - windowHeight)))));\n\n    // If the session has expired, clear old scroll data and send no events.\n    if (this.session.isExpired()) {\n      this.store.clear();\n    } else {\n      const maxScrollPercentage = this.getMaxScrollPercentageForCurrentPage();\n\n      if (scrollPercentage > maxScrollPercentage) {\n        if (scrollPercentage == 100 || maxScrollPercentage == 100) {\n          this.stopListeningForMaxScrollChanges();\n        }\n        const increaseAmount = scrollPercentage - maxScrollPercentage;\n        if (scrollPercentage == 100 ||\n            increaseAmount >= this.opts.increaseThreshold) {\n          this.setMaxScrollPercentageForCurrentPage(scrollPercentage);\n          this.sendMaxScrollEvent(increaseAmount, scrollPercentage);\n        }\n      }\n    }\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function(...*)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(...*)}\n   */\n  trackerSetOverride(originalMethod) {\n    return (...args) => {\n      originalMethod(...args);\n\n      /** @type {!FieldsObj} */\n      const fields = isObject(args[0]) ? args[0] : {[args[0]]: args[1]};\n      if (fields.page) {\n        const lastPagePath = this.pagePath;\n        this.pagePath = this.getPagePath();\n\n        if (this.pagePath != lastPagePath) {\n          // Since event listeners for the same function are never added twice,\n          // we don't need to worry about whether we're already listening. We\n          // can just add the event listener again.\n          this.listenForMaxScrollChanges();\n        }\n      }\n    }\n  }\n\n  /**\n   * Sends an event for the increased max scroll percentage amount.\n   * @param {number} increaseAmount\n   * @param {number} scrollPercentage\n   */\n  sendMaxScrollEvent(increaseAmount, scrollPercentage) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      eventCategory: 'Max Scroll',\n      eventAction: 'increase',\n      eventValue: increaseAmount,\n      eventLabel: String(scrollPercentage),\n      nonInteraction: true,\n    };\n\n    // If a custom metric was specified, set it equal to the event value.\n    if (this.opts.maxScrollMetricIndex) {\n      defaultFields['metric' + this.opts.maxScrollMetricIndex] = increaseAmount;\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Stores the current max scroll percentage for the current page.\n   * @param {number} maxScrollPercentage\n   */\n  setMaxScrollPercentageForCurrentPage(maxScrollPercentage) {\n    this.store.set({[this.pagePath]: maxScrollPercentage});\n  }\n\n  /**\n   * Gets the stored max scroll percentage for the current page.\n   * @return {number}\n   */\n  getMaxScrollPercentageForCurrentPage() {\n    return this.store.get()[this.pagePath] || 0;\n  }\n\n  /**\n   * Gets the page path from the tracker object.\n   * @return {number}\n   */\n  getPagePath() {\n    const url = parseUrl(\n        this.tracker.get('page') || this.tracker.get('location'))\n    return url.pathname + url.search;\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    this.stopListeningForMaxScrollChanges();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n  }\n}\n\n\nprovide('maxScrollTracker', MaxScrollTracker);\n\n\n/**\n * Gets the maximum height of the page including scrollable area.\n * @return {number}\n */\nfunction getPageHeight() {\n  const html = document.documentElement;\n  const body = document.body;\n  return Math.max(html.offsetHeight, html.scrollHeight,\n      body.offsetHeight, body.scrollHeight)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/max-scroll-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        debounce, isObject, toArray} from '../utilities';\n\n\n/**\n * Declares the MediaQueryList instance cache.\n */\nconst mediaMap = {};\n\n\n/**\n * Class for the `mediaQueryTracker` analytics.js plugin.\n * @implements {MediaQueryTrackerPublicInterface}\n */\nclass MediaQueryTracker {\n  /**\n   * Registers media query tracking.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.MEDIA_QUERY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.matchMedia) return;\n\n    /** @type {MediaQueryTrackerOpts} */\n    const defaultOpts = {\n      // definitions: unefined,\n      changeTemplate: this.changeTemplate,\n      changeTimeout: 1000,\n      fieldsObj: {},\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {MediaQueryTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    // Exits early if media query data doesn't exist.\n    if (!isObject(this.opts.definitions)) return;\n\n    this.opts.definitions = toArray(this.opts.definitions);\n    this.tracker = tracker;\n    this.changeListeners = [];\n\n    this.processMediaQueries();\n  }\n\n  /**\n   * Loops through each media query definition, sets the custom dimenion data,\n   * and adds the change listeners.\n   */\n  processMediaQueries() {\n    this.opts.definitions.forEach((definition) => {\n      // Only processes definitions with a name and index.\n      if (definition.name && definition.dimensionIndex) {\n        const mediaName = this.getMatchName(definition);\n        this.tracker.set('dimension' + definition.dimensionIndex, mediaName);\n\n        this.addChangeListeners(definition);\n      }\n    });\n  }\n\n  /**\n   * Takes a definition object and return the name of the matching media item.\n   * If no match is found, the NULL_DIMENSION value is returned.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension.\n   * @return {string} The name of the matched media or NULL_DIMENSION.\n   */\n  getMatchName(definition) {\n    let match;\n\n    definition.items.forEach((item) => {\n      if (getMediaList(item.media).matches) {\n        match = item;\n      }\n    });\n    return match ? match.name : NULL_DIMENSION;\n  }\n\n  /**\n   * Adds change listeners to each media query in the definition list.\n   * Debounces the changes to prevent unnecessary hits from being sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  addChangeListeners(definition) {\n    definition.items.forEach((item) => {\n      const mql = getMediaList(item.media);\n      const fn = debounce(() => {\n        this.handleChanges(definition);\n      }, this.opts.changeTimeout);\n\n      mql.addListener(fn);\n      this.changeListeners.push({mql, fn});\n    });\n  }\n\n  /**\n   * Handles changes to the matched media. When the new value differs from\n   * the old value, a change event is sent.\n   * @param {Object} definition A set of named media queries associated\n   *     with a single custom dimension\n   */\n  handleChanges(definition) {\n    const newValue = this.getMatchName(definition);\n    const oldValue = this.tracker.get('dimension' + definition.dimensionIndex);\n\n    if (newValue !== oldValue) {\n      this.tracker.set('dimension' + definition.dimensionIndex, newValue);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: definition.name,\n        eventAction: 'change',\n        eventLabel: this.opts.changeTemplate(oldValue, newValue),\n        nonInteraction: true,\n      };\n      this.tracker.send('event', createFieldsObj(defaultFields,\n          this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n    }\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    for (let i = 0, listener; listener = this.changeListeners[i]; i++) {\n      listener.mql.removeListener(listener.fn);\n    }\n  }\n\n  /**\n   * Sets the default formatting of the change event label.\n   * This can be overridden by setting the `changeTemplate` option.\n   * @param {string} oldValue The value of the media query prior to the change.\n   * @param {string} newValue The value of the media query after the change.\n   * @return {string} The formatted event label.\n   */\n  changeTemplate(oldValue, newValue) {\n    return oldValue + ' => ' + newValue;\n  }\n}\n\n\nprovide('mediaQueryTracker', MediaQueryTracker);\n\n\n/**\n * Accepts a media query and returns a MediaQueryList object.\n * Caches the values to avoid multiple unnecessary instances.\n * @param {string} media A media query value.\n * @return {MediaQueryList} The matched media.\n */\nfunction getMediaList(media) {\n  return mediaMap[media] || (mediaMap[media] = window.matchMedia(media));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/media-query-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {delegate, parseUrl} from 'dom-utils';\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj,\n        getAttributeFields, withTimeout} from '../utilities';\n\n\n/**\n * Class for the `outboundLinkTracker` analytics.js plugin.\n * @implements {OutboundLinkTrackerPublicInterface}\n */\nclass OutboundLinkTracker {\n  /**\n   * Registers outbound link tracking on a tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.OUTBOUND_LINK_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {OutboundLinkTrackerOpts} */\n    const defaultOpts = {\n      events: ['click'],\n      linkSelector: 'a, area',\n      shouldTrackOutboundLink: this.shouldTrackOutboundLink,\n      fieldsObj: {},\n      attributePrefix: 'ga-',\n      // hitFilter: undefined,\n    };\n\n    this.opts = /** @type {OutboundLinkTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods.\n    this.handleLinkInteractions = this.handleLinkInteractions.bind(this);\n\n    // Creates a mapping of events to their delegates\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(document, event, this.opts.linkSelector,\n          this.handleLinkInteractions, {composed: true, useCapture: true});\n    });\n  }\n\n  /**\n   * Handles all interactions on link elements. A link is considered an outbound\n   * link if its hostname property does not match location.hostname. When the\n   * beacon transport method is not available, the links target is set to\n   * \"_blank\" to ensure the hit can be sent.\n   * @param {Event} event The DOM click event.\n   * @param {Element} link The delegated event target.\n   */\n  handleLinkInteractions(event, link) {\n    if (this.opts.shouldTrackOutboundLink(link, parseUrl)) {\n      const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n      const url = parseUrl(href);\n\n      /** @type {FieldsObj} */\n      const defaultFields = {\n        transport: 'beacon',\n        eventCategory: 'Outbound Link',\n        eventAction: event.type,\n        eventLabel: url.href,\n      };\n\n      if (!navigator.sendBeacon &&\n          linkClickWillUnloadCurrentPage(event, link)) {\n        // Adds a new event handler at the last minute to minimize the chances\n        // that another event handler for this click will run after this logic.\n        window.addEventListener('click', function(event) {\n          // Checks to make sure another event handler hasn't already prevented\n          // the default action. If it has the custom redirect isn't needed.\n          if (!event.defaultPrevented) {\n            // Stops the click and waits until the hit is complete (with\n            // timeout) for browsers that don't support beacon.\n            event.preventDefault();\n            defaultFields.hitCallback = withTimeout(function() {\n              location.href = href;\n            });\n          }\n        });\n      }\n\n      /** @type {FieldsObj} */\n      const userFields = assign({}, this.opts.fieldsObj,\n          getAttributeFields(link, this.opts.attributePrefix));\n\n      this.tracker.send('event', createFieldsObj(\n          defaultFields, userFields, this.tracker, this.opts.hitFilter, link));\n    }\n  }\n\n  /**\n   * Determines whether or not the tracker should send a hit when a link is\n   * clicked. By default links with a hostname property not equal to the current\n   * hostname are tracked.\n   * @param {Element} link The link that was clicked on.\n   * @param {Function} parseUrlFn A cross-browser utility method for url\n   *     parsing (note: renamed to disambiguate when compiling).\n   * @return {boolean} Whether or not the link should be tracked.\n   */\n  shouldTrackOutboundLink(link, parseUrlFn) {\n    const href = link.getAttribute('href') || link.getAttribute('xlink:href');\n    const url = parseUrlFn(href);\n    return url.hostname != location.hostname &&\n        url.protocol.slice(0, 4) == 'http';\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    Object.keys(this.delegates).forEach((key) => {\n      this.delegates[key].destroy();\n    });\n  }\n}\n\n\nprovide('outboundLinkTracker', OutboundLinkTracker);\n\n\n/**\n * Determines if a link click event will cause the current page to upload.\n * Note: most link clicks *will* cause the current page to unload because they\n * initiate a page navigation. The most common reason a link click won't cause\n * the page to unload is if the clicked was to open the link in a new tab.\n * @param {Event} event The DOM event.\n * @param {Element} link The link element clicked on.\n * @return {boolean} True if the current page will be unloaded.\n */\nfunction linkClickWillUnloadCurrentPage(event, link) {\n  return !(\n      // The event type can be customized; we only care about clicks here.\n      event.type != 'click' ||\n      // Links with target=\"_blank\" set will open in a new window/tab.\n      link.target == '_blank' ||\n      // On mac, command clicking will open a link in a new tab. Control\n      // clicking does this on windows.\n      event.metaKey || event.ctrlKey ||\n      // Shift clicking in Chrome/Firefox opens the link in a new window\n      // In Safari it adds the URL to a favorites list.\n      event.shiftKey ||\n      // On Mac, clicking with the option key is used to download a resouce.\n      event.altKey ||\n      // Middle mouse button clicks (which == 2) are used to open a link\n      // in a new tab, and right clicks (which == 3) on Firefox trigger\n      // a click event.\n      event.which > 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/outbound-link-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {NULL_DIMENSION} from '../constants';\nimport MethodChain from '../method-chain';\nimport provide from '../provide';\nimport Session from '../session';\nimport Store from '../store';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj, isObject, now, uuid} from '../utilities';\n\n\nconst HIDDEN = 'hidden';\nconst VISIBLE = 'visible';\nconst PAGE_ID = uuid();\nconst SECONDS = 1000;\n\n\n/**\n * Class for the `pageVisibilityTracker` analytics.js plugin.\n * @implements {PageVisibilityTrackerPublicInterface}\n */\nclass PageVisibilityTracker {\n  /**\n   * Registers outbound link tracking on tracker object.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.PAGE_VISIBILITY_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {PageVisibilityTrackerOpts} */\n    const defaultOpts = {\n      sessionTimeout: Session.DEFAULT_TIMEOUT,\n      // timeZone: undefined,\n      // visibleMetricIndex: undefined,\n      fieldsObj: {},\n      // hitFilter: undefined\n    };\n\n    this.opts = /** @type {PageVisibilityTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n    this.lastPageState = null;\n\n    // Binds methods to `this`.\n    this.trackerSetOverride = this.trackerSetOverride.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleWindowUnload = this.handleWindowUnload.bind(this);\n    this.handleExternalStoreSet = this.handleExternalStoreSet.bind(this);\n\n    // Creates the store and binds storage change events.\n    this.store = Store.getOrCreate(\n        tracker.get('trackingId'), 'plugins/page-visibility-tracker');\n    this.store.on('externalSet', this.handleExternalStoreSet);\n\n    // Creates the session and binds session events.\n    this.session = new Session(\n        tracker, this.opts.sessionTimeout, this.opts.timeZone);\n\n    // Override the built-in tracker.set method to watch for changes.\n    MethodChain.add(tracker, 'set', this.trackerSetOverride);\n\n    document.addEventListener('visibilitychange', this.handleChange);\n    window.addEventListener('unload', this.handleWindowUnload);\n    if (document.visibilityState == VISIBLE) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Inspects the last visibility state change data and determines if a\n   * visibility event needs to be tracked based on the current visibility\n   * state and whether or not the session has expired. If the session has\n   * expired, a change to `visible` will trigger an additional pageview.\n   * This method also sends as the event value (and optionally a custom metric)\n   * the elapsed time between this event and the previously reported change\n   * in the same session, allowing you to more accurately determine when users\n   * were actually looking at your page versus when it was in the background.\n   */\n  handleChange() {\n    const lastStoredChange = this.validateChangeData(this.store.get());\n\n    /** @type {PageVisibilityStoreData} */\n    const change = {\n      time: now(),\n      state: document.visibilityState,\n      pageId: PAGE_ID,\n    };\n\n    if (this.session.isExpired()) {\n      if (document.visibilityState == HIDDEN) {\n        // Hidden events should never be sent if a session has expired (if\n        // they are, they'll likely start a new session with just this event).\n        this.store.clear();\n      } else {\n        // If the session has expired, changes to visible should be considered\n        // a new pageview rather than a visibility event.\n        // This behavior ensures all sessions contain a pageview so\n        // session-level page dimensions and metrics (e.g. ga:landingPagePath\n        // and ga:entrances) are correct.\n\n        /** @type {FieldsObj} */\n        const defaultFields = {transport: 'beacon'};\n        this.tracker.send('pageview',\n            createFieldsObj(defaultFields, this.opts.fieldsObj,\n                this.tracker, this.opts.hitFilter));\n\n        this.store.set(change);\n      }\n    } else {\n      if (lastStoredChange.pageId == PAGE_ID &&\n          lastStoredChange.state == VISIBLE) {\n        this.sendPageVisibilityEvent(lastStoredChange);\n      }\n      this.store.set(change);\n    }\n\n    this.lastPageState = document.visibilityState;\n  }\n\n  /**\n   * Retroactively updates the stored change data in cases where it's known to\n   * be out of sync.\n   * This plugin keeps track of each visiblity change and stores the last one\n   * in localStorage. LocalStorage is used to handle situations where the user\n   * has multiple page open at the same time and we don't want to\n   * double-report page visibility in those cases.\n   * However, a problem can occur if a user closes a page when one or more\n   * visible pages are still open. In such cases it's impossible to know\n   * which of the remaining pages the user will interact with next.\n   * To solve this problem we wait for the next change on any page and then\n   * retroactively update the stored data to reflect the current page as being\n   * the page on which the last change event occured and measure visibility\n   * from that point.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @return {PageVisibilityStoreData}\n   */\n  validateChangeData(lastStoredChange) {\n    if (this.lastPageState == VISIBLE &&\n        lastStoredChange.state == HIDDEN &&\n        lastStoredChange.pageId != PAGE_ID) {\n      lastStoredChange.state = VISIBLE;\n      lastStoredChange.pageId = PAGE_ID;\n      this.store.set(lastStoredChange);\n    }\n    return lastStoredChange;\n  }\n\n  /**\n   * Sends a Page Visibility event with the passed event action and visibility\n   * state. If a previous state change exists within the same session, the time\n   * delta is tracked as the event label and optionally as a custom metric.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {number|undefined=} hitTime A hit timestap used to help ensure\n   *     original order when reporting across multiple windows/tabs.\n   */\n  sendPageVisibilityEvent(lastStoredChange, hitTime = undefined) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      nonInteraction: true,\n      eventCategory: 'Page Visibility',\n      eventAction: 'track',\n      eventLabel: NULL_DIMENSION,\n    };\n    if (hitTime) {\n      defaultFields.queueTime = now() - hitTime;\n    }\n\n    const delta = this.getTimeSinceLastStoredChange(lastStoredChange, hitTime);\n\n    // If at least a one second delta exists, report it.\n    if (delta) {\n      defaultFields.eventValue = delta;\n\n      // If a custom metric was specified, set it equal to the event value.\n      if (this.opts.visibleMetricIndex) {\n        defaultFields['metric' + this.opts.visibleMetricIndex] = delta;\n      }\n    }\n\n    this.tracker.send('event',\n        createFieldsObj(defaultFields, this.opts.fieldsObj,\n            this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Detects changes to the tracker object and triggers an update if the page\n   * field has changed.\n   * @param {function(...*)} originalMethod A reference to the overridden\n   *     method.\n   * @return {function(...*)}\n   */\n  trackerSetOverride(originalMethod) {\n    return (...args) => {\n      /** @type {!FieldsObj} */\n      const fields = isObject(args[0]) ? args[0] : {[args[0]]: args[1]};\n      if (fields.page && fields.page !== this.tracker.get('page')) {\n        if (this.lastPageState == VISIBLE) {\n          this.handleChange();\n        }\n      }\n      originalMethod(...args);\n    };\n  }\n\n  /**\n   * Calculates the time since the last visibility change event in the current\n   * session. If the session has expired the reported time is zero.\n   * @param {PageVisibilityStoreData} lastStoredChange\n   * @param {number=} hitTime The timestamp of the current hit, defaulting\n   *     to now.\n   * @return {number} The time (in ms) since the last change.\n   */\n  getTimeSinceLastStoredChange(lastStoredChange, hitTime = now()) {\n    const isSessionActive = !this.session.isExpired();\n    const timeSinceLastStoredChange = lastStoredChange.time &&\n        Math.round((hitTime - lastStoredChange.time) / SECONDS);\n\n    return isSessionActive &&\n        timeSinceLastStoredChange > 0 ? timeSinceLastStoredChange : 0;\n  }\n\n  /**\n   * Handles responding to the `storage` event.\n   * The code on this page needs to be informed when other tabs or windows are\n   * updating the stored page visibility state data. This method checks to see\n   * if a hidden state is stored when there are still visible tabs open, which\n   * can happen if multiple windows are open at the same time.\n   * @param {PageVisibilityStoreData} newData\n   * @param {PageVisibilityStoreData} oldData\n   */\n  handleExternalStoreSet(newData, oldData) {\n    // If the change times are the same, then the previous write only\n    // updated the active page ID. It didn't enter a new state and thus no\n    // hits should be sent.\n    if (newData.time == oldData.time) return;\n\n    // Page Visibility events must be sent by the tracker on the page\n    // where the original event occurred. So if a change happens on another\n    // page, but this page is where the previous change event occurred, then\n    // this page is the one that needs to send the event (so all dimension\n    // data is correct).\n    if (oldData.pageId == PAGE_ID &&\n        oldData.state == VISIBLE) {\n      this.sendPageVisibilityEvent(oldData, newData.time);\n    }\n  }\n\n  /**\n   * Handles responding to the `unload` event.\n   * Since some browsers don't emit a `visibilitychange` event in all cases\n   * where a page might be unloaded, it's necessary to hook into the `unload`\n   * event to ensure the correct state is always stored.\n   */\n  handleWindowUnload() {\n    // If the stored visibility state isn't hidden when the unload event\n    // fires, it means the visibilitychange event didn't fire as the document\n    // was being unloaded, so we invoke it manually.\n    if (this.lastPageState != HIDDEN) {\n      this.handleChange();\n    }\n  }\n\n  /**\n   * Removes all event listeners and restores overridden methods.\n   */\n  remove() {\n    this.session.destroy();\n    MethodChain.remove(this.tracker, 'set', this.trackerSetOverride);\n    window.removeEventListener('unload', this.handleWindowUnload);\n    document.removeEventListener('visibilitychange', this.handleChange);\n  }\n}\n\n\nprovide('pageVisibilityTracker', PageVisibilityTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/page-visibility-tracker.js","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport provide from '../provide';\nimport {plugins, trackUsage} from '../usage';\nimport {assign, createFieldsObj} from '../utilities';\n\n\n/**\n * Class for the `socialWidgetTracker` analytics.js plugin.\n * @implements {SocialWidgetTrackerPublicInterface}\n */\nclass SocialWidgetTracker {\n  /**\n   * Registers social tracking on tracker object.\n   * Supports both declarative social tracking via HTML attributes as well as\n   * tracking for social events when using official Twitter or Facebook widgets.\n   * @param {!Tracker} tracker Passed internally by analytics.js\n   * @param {?Object} opts Passed by the require command.\n   */\n  constructor(tracker, opts) {\n    trackUsage(tracker, plugins.SOCIAL_WIDGET_TRACKER);\n\n    // Feature detects to prevent errors in unsupporting browsers.\n    if (!window.addEventListener) return;\n\n    /** @type {SocialWidgetTrackerOpts} */\n    const defaultOpts = {\n      fieldsObj: {},\n      hitFilter: null,\n    };\n\n    this.opts = /** @type {SocialWidgetTrackerOpts} */ (\n        assign(defaultOpts, opts));\n\n    this.tracker = tracker;\n\n    // Binds methods to `this`.\n    this.addWidgetListeners = this.addWidgetListeners.bind(this);\n    this.addTwitterEventHandlers = this.addTwitterEventHandlers.bind(this);\n    this.handleTweetEvents = this.handleTweetEvents.bind(this);\n    this.handleFollowEvents = this.handleFollowEvents.bind(this);\n    this.handleLikeEvents = this.handleLikeEvents.bind(this);\n    this.handleUnlikeEvents = this.handleUnlikeEvents.bind(this);\n\n    if (document.readyState != 'complete') {\n      // Adds the widget listeners after the window's `load` event fires.\n      // If loading widgets using the officially recommended snippets, they\n      // will be available at `window.load`. If not users can call the\n      // `addWidgetListeners` method manually.\n      window.addEventListener('load', this.addWidgetListeners);\n    } else {\n      this.addWidgetListeners();\n    }\n  }\n\n\n  /**\n   * Invokes the methods to add Facebook and Twitter widget event listeners.\n   * Ensures the respective global namespaces are present before adding.\n   */\n  addWidgetListeners() {\n    if (window.FB) this.addFacebookEventHandlers();\n    if (window.twttr) this.addTwitterEventHandlers();\n  }\n\n  /**\n   * Adds event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons. Note: this does not capture tweet or\n   * follow events emitted by other Twitter widgets (tweet, timeline, etc.).\n   */\n  addTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.bind('tweet', this.handleTweetEvents);\n        window.twttr.events.bind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"tweet\" and \"follow\" events emitted by the\n   * official tweet and follow buttons.\n   */\n  removeTwitterEventHandlers() {\n    try {\n      window.twttr.ready(() => {\n        window.twttr.events.unbind('tweet', this.handleTweetEvents);\n        window.twttr.events.unbind('follow', this.handleFollowEvents);\n      });\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Adds event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  addFacebookEventHandlers() {\n    try {\n      window.FB.Event.subscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.subscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Removes event handlers for the \"like\" and \"unlike\" events emitted by the\n   * official Facebook like button.\n   */\n  removeFacebookEventHandlers() {\n    try {\n      window.FB.Event.unsubscribe('edge.create', this.handleLikeEvents);\n      window.FB.Event.unsubscribe('edge.remove', this.handleUnlikeEvents);\n    } catch(err) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Handles `tweet` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleTweetEvents(event) {\n    // Ignores tweets from widgets that aren't the tweet button.\n    if (event.region != 'tweet') return;\n\n    const url = event.data.url || event.target.getAttribute('data-url') ||\n        location.href;\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'tweet',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `follow` events emitted by the Twitter JS SDK.\n   * @param {TwttrEvent} event The Twitter event object passed to the handler.\n   */\n  handleFollowEvents(event) {\n    // Ignore follows from widgets that aren't the follow button.\n    if (event.region != 'follow') return;\n\n    const screenName = event.data.screen_name ||\n        event.target.getAttribute('data-screen-name');\n\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Twitter',\n      socialAction: 'follow',\n      socialTarget: screenName,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `like` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the like event.\n   */\n  handleLikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'like',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Handles `unlike` events emitted by the Facebook JS SDK.\n   * @param {string} url The URL corresponding to the unlike event.\n   */\n  handleUnlikeEvents(url) {\n    /** @type {FieldsObj} */\n    const defaultFields = {\n      transport: 'beacon',\n      socialNetwork: 'Facebook',\n      socialAction: 'unlike',\n      socialTarget: url,\n    };\n    this.tracker.send('social', createFieldsObj(defaultFields,\n        this.opts.fieldsObj, this.tracker, this.opts.hitFilter));\n  }\n\n  /**\n   * Removes all event listeners and instance properties.\n   */\n  remove() {\n    window.removeEventListener('load', this.addWidgetListeners);\n    this.removeFacebookEventHandlers();\n    this.removeTwitterEventHandlers();\n  }\n}\n\n\nprovide('socialWidgetTracker', SocialWidgetTracker);\n\n\n\n// WEBPACK FOOTER //\n// ./~/autotrack/lib/plugins/social-widget-tracker.js","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/delegate.js","/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType == 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/get-attributes.js","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/dom-utils/lib/parse-url.js"],"sourceRoot":""}